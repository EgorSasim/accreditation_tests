import { Question } from 'src/app/common/questions/questions.typings';

export const OOTPISP: Question[] = [
  {
    question:
      'Какой объем памяти занимает экземпляр класса без полей, методов, свойств, описанных конструкторов (32-битная платформа):',
    answers: [
      { text: 'от 8 до 16 байт', isRight: false },
      { text: 'размер ссылки (8 байт)', isRight: false },
      { text: 'более 16 байт', isRight: false },
      { text: 'о байт', isRight: false },
      { text: 'размер ссылки (4 байта)', isRight: true },
    ],
  },
  {
    question: 'Что означает представление шаблонов в нотации UML?',
    answers: [
      { text: 'Использование шаблонов в моделях', isRight: false },
      { text: 'Синхронизацию шаблонов', isRight: false },
      { text: 'Использование шаблонов в диаграммах', isRight: false },
      { text: 'Изображение шаблонов на языке UML', isRight: true },
      { text: 'Выполнение кодогенерации по шаблонам', isRight: false },
    ],
  },
  {
    question: 'Когда будет выполняться блок finally при обработке исключений?',
    answers: [
      { text: 'При работе с потоками данных', isRight: false },
      { text: 'Всегда', isRight: true },
      { text: 'Не существует такого блока', isRight: false },
      { text: 'Создано исключение', isRight: false },
      { text: 'Исключений не было', isRight: false },
    ],
  },
  {
    question: 'Модификатор доступа internal, примененный к модулю, означает:',
    answers: [
      {
        text: 'Доступ к модулю получают лишь процедуры этого модуля',
        isRight: false,
      },
      {
        text: 'Доступ к модулю получают только модули расширения',
        isRight: false,
      },
      {
        text: 'Доступ к модулю получают данный модуль и модули расширения',
        isRight: false,
      },
      { text: 'Доступ к модулю получают все', isRight: false },
      {
        text: 'Данные становятся видимыми для всего модуля, а также доступ к модулю получают программы, в которых этот модуль подключаются на уровне исходного кода',
        isRight: true,
      },
    ],
  },
  {
    question: 'Какая из диаграмм не относится к UML-диаграммам?',
    answers: [
      { text: 'Компонентов', isRight: false },
      { text: 'Классов', isRight: false },
      { text: 'Состояний объектов', isRight: false },
      { text: 'Взаимодействия объектов', isRight: false },
      { text: 'Переходов объектов', isRight: true },
    ],
  },
  {
    question: 'Перегруженный метод это:',
    answers: [
      {
        text: 'два или больше метода имеют одинаковое название и одинаковые аргументы, но один из методов находится в производном класс',
        isRight: false,
      },
      { text: 'метод, у которого больше 10 аргументов', isRight: false },
      {
        text: 'два или больше методов имеют разные название, но одинаковые аргументы',
        isRight: false,
      },
      { text: 'метод, содержащий в себе еще один метод', isRight: false },
      {
        text: 'два или больше методов имеют одинаковое название, но разные аргументы',
        isRight: true,
      },
    ],
  },
  {
    question:
      'Что означает определение бизнес-требований в ходе разработки программного средства?',
    answers: [
      { text: 'Исследование существующих систем', isRight: false },
      { text: 'Проектирование и реализацию базы данных', isRight: false },
      { text: 'Постановку задачи проектирования', isRight: true },
      {
        text: 'Проектирование и реализацию программных модулей',
        isRight: false,
      },
      {
        text: 'Выбор конкретной архитектуры разрабатываемой системы',
        isRight: false,
      },
    ],
  },
  {
    question:
      'Какой класс известен под именем «Virtual Constructor (виртуальный конструктор)»?',
    answers: [
      { text: 'Итератор', isRight: false },
      { text: 'Одиночка', isRight: false },
      { text: 'фабричный метод', isRight: true },
      { text: 'Посетитель', isRight: false },
      { text: 'Наблюдатель', isRight: false },
    ],
  },
  {
    question:
      'Группа людей -> человек. Какое отношение описывает данный пример?',
    answers: [
      { text: 'Нет правильных ответов', isRight: false },
      { text: 'Наследование', isRight: false },
      { text: 'Композиция', isRight: false },
      { text: 'Агрегация', isRight: true },
      { text: 'Реализация', isRight: false },
    ],
  },
  {
    question:
      'Сколько родительских классов может иметь производный класс в С#?',
    answers: [
      { text: 'Нет правильных ответов', isRight: false },
      { text: 'Любое количество', isRight: false },
      { text: 'Не больше одного', isRight: false },
      { text: 'Не больше двух', isRight: false },
      { text: 'Всегда один', isRight: true },
    ],
  },
  {
    question: 'Модификатор доступа private примененный к модулю означает:',
    answers: [
      {
        text: 'доступ к модулю получают данный модуль и программы, в которых данный модуль подключаются на уровне исходного код',
        isRight: false,
      },
      { text: 'доступ к модулю получают все', isRight: false },
      {
        text: 'доступ к модулю получают данный модуль и модули расширения',
        isRight: false,
      },
      {
        text: 'доступ к модулю получают лишь процедуры этого модуля',
        isRight: true,
      },
      {
        text: 'доступ к модулю получают только модули расширения',
        isRight: false,
      },
    ],
  },
  {
    question: 'Укажите типы рисков программных проектов',
    answers: [
      { text: 'Экономический, технологический', isRight: false },
      { text: 'функциональный, проектный', isRight: false },
      { text: 'Проектный, технический, коммерческий', isRight: true },
      { text: 'Технологический, технический', isRight: false },
      { text: 'Коммерческий, программный', isRight: false },
    ],
  },
  {
    question:
      'Для чего на диаграмме Class используется стереотип граничный класс?',
    answers: [
      {
        text: 'Для отображения принципа модульности в системе',
        isRight: false,
      },
      { text: 'Для отображения иерархии в системе', isRight: false },
      {
        text: 'Для координации работы других классов приложения',
        isRight: false,
      },
      { text: 'Для взаимодействия с внешними актерами', isRight: true },
      {
        text: 'Для моделирования классов, которые отвечают за хранение определенной информации',
        isRight: false,
      },
    ],
  },
  {
    question:
      'Какую диаграмму можно получить автоматически из диаграммы Collaboration?',
    answers: [
      { text: 'Class', isRight: false },
      { text: 'Statechart', isRight: false },
      { text: 'Sequence', isRight: true },
      { text: 'Никакую', isRight: false },
      { text: 'Activity', isRight: false },
    ],
  },
  {
    question: 'Чем является UML для создания программной системы?',
    answers: [
      { text: 'Методом', isRight: false },
      { text: 'Процессом', isRight: false },
      { text: 'Нотацией', isRight: true },
      { text: 'Инструментом', isRight: false },
      { text: 'Методологией', isRight: false },
    ],
  },
  {
    question: 'Модификатор доступа protected, примененный к модулю, означает:',
    answers: [
      {
        text: 'Доступ к модулю получают только модули расширения',
        isRight: false,
      },
      {
        text: 'Доступ к модулю получают данный модуль и модули расширения',
        isRight: true,
      },
      {
        text: 'Доступ к модулю получают лишь процедуры этого модуля',
        isRight: false,
      },
      {
        text: 'Доступ к модулю получают данный модуль и программы, в которых данный модуль подключаются на уровне исходного кода',
        isRight: false,
      },
      { text: 'Доступ к модулю получают все', isRight: false },
    ],
  },
  {
    question: 'Тип данных для переменной, содержащей адрес метода, называется:',
    answers: [
      { text: 'посланник', isRight: false },
      { text: 'представитель', isRight: false },
      { text: 'посол', isRight: false },
      { text: 'Делегат', isRight: true },
      { text: 'ходок', isRight: false },
    ],
  },
  {
    question: 'Выберите верное утверждение о приеме «Наблюдатель»:',
    answers: [
      {
        text: 'используется, когда при модификации одного объекта требуется изменить другие объекты и неизвестно, сколько объектов нужно изменить',
        isRight: false,
      },
      {
        text: 'определяет зависимость типа «один ко многим» между объектами, что при изменении состояния одного объекта все зависящие от него оповещаются об этом и автоматически обновляются',
        isRight: false,
      },
      { text: 'также известен как publish-subscribe', isRight: false },
      { text: 'все предложенные ответы верны', isRight: true },
      { text: 'прием поведения объектов', isRight: false },
    ],
  },
  {
    question: '22. Что представляет собой структура CASE-средства?',
    answers: [
      { text: 'Номенклатуру CASE-средства', isRight: false },
      { text: 'UML-модели и связи между ними', isRight: false },
      { text: 'UML-диаграммы и связи между ними', isRight: false },
      { text: 'Программные модули и связи между ними', isRight: false },
      {
        text: 'Функциональные составные части средства и связи между ними',
        isRight: true,
      },
    ],
  },
  {
    question: '23. Если в классе есть статический метод, то …:',
    answers: [
      {
        text: 'статический метод не может обращаться к нестатическим полям',
        isRight: false,
      },
      { text: 'все приведенные утверждения верны', isRight: true },
      {
        text: 'его можно вызвать, даже если экземпляр класса не создан',
        isRight: false,
      },
      {
        text: 'существует только одна копия статического метода',
        isRight: false,
      },
      {
        text: 'доступ к методу выполняется по имени класса, а не экземпляра',
        isRight: false,
      },
    ],
  },
  {
    question:
      '24. Что означает полиморфизм в объектно-ориентированной методологии?',
    answers: [
      {
        text: 'Построение новых классов на основе существующих',
        isRight: false,
      },
      {
        text: 'Выделение существенных характеристик некоторого объекта',
        isRight: false,
      },
      { text: 'Ранжирование системы абстракций', isRight: false },
      {
        text: 'Отделение друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: false,
      },
      {
        text: 'Способность класса принадлежать более чем одному типу',
        isRight: true,
      },
    ],
  },
  {
    question: '25. Назовите основные аспекты UML-модели',
    answers: [
      {
        text: 'Объектно-ориентированный подход, среда разработки, поведение объектов',
        isRight: false,
      },
      {
        text: 'Статическая структура и динамическое поведение',
        isRight: true,
      },
      { text: 'Состояния и поведение объектов', isRight: false },
      { text: 'Время и деньги', isRight: false },
      { text: 'Классы и объекты системы', isRight: false },
    ],
  },
  {
    question: '26. На каком этапе создания модели строится диаграмма Use Case?',
    answers: [
      {
        text: 'Диаграмма Use Case строится непосредственно перед кодогенерацией',
        isRight: false,
      },
      {
        text: 'Не имеет значения, на каком этапе строить диаграмму Use Case',
        isRight: false,
      },
      { text: 'Диаграмму Use Case можно вообще не строить', isRight: false },
      {
        text: 'Диаграмма Use Case строится на завершающем этапе разработки модели',
        isRight: false,
      },
      {
        text: 'Диаграмма Use Case строится в самом начале моделирования, являясь первой из создаваемых диаграмм',
        isRight: true,
      },
    ],
  },
  {
    question: '27. Перекрываемый метод это:',
    answers: [
      {
        text: 'два или больше методов имеют одинаковое название, но разные аргументы',
        isRight: false,
      },
      { text: 'метод, у которого больше 10 аргументов', isRight: false },
      { text: 'метод, содержащий в себе еще один метод', isRight: false },
      {
        text: 'два или больше метода имеют одинаковое название и одинаковые аргументы, но один из методов находится в производном классе',
        isRight: true,
      },
      {
        text: 'два или больше методов имеют разные название, но одинаковые аргументы',
        isRight: false,
      },
    ],
  },
  {
    question:
      '28. Что является преимуществом использования приемов проектирования (patterns of programming)?',
    answers: [
      {
        text: 'Они уменьшают количество проектной документации',
        isRight: false,
      },
      {
        text: 'Они предоставляют механизмы для тестирования задач',
        isRight: false,
      },
      {
        text: 'Они упрощают разработку и поддержку пользовательских интерфейсов',
        isRight: false,
      },
      {
        text: 'Они снижают затраты на разработку и их можно использовать без изменений',
        isRight: false,
      },
      {
        text: 'Они предоставляют проверенные техники решения задач',
        isRight: true,
      },
    ],
  },
  {
    question: '29. Выберите верное утверждение:',
    answers: [
      {
        text: 'таблица виртуальных методов хранит только виртуальные методы',
        isRight: false,
      },
      {
        text: 'в таблице виртуальных методов хранятся поля класса',
        isRight: false,
      },
      { text: 'нет правильных ответов', isRight: false },
      {
        text: 'для каждого класса создаётся таблица виртуальных методов',
        isRight: true,
      },
      {
        text: 'для каждого объекта создаётся таблица виртуальных методов',
        isRight: false,
      },
    ],
  },
  {
    question:
      '30. К каким критериям CASE-средств относится показатель, который можно определить как КПД человека в системе?',
    answers: [
      { text: 'Технологическим', isRight: false },
      { text: 'Функциональным', isRight: false },
      { text: 'Техническим', isRight: false },
      { text: 'Эргономическим', isRight: true },
      { text: 'Экономическим', isRight: false },
    ],
  },
  {
    question: '31. За счёт чего реализуется принцип полиморфизма?',
    answers: [
      { text: 'Наличия абстрактных классов', isRight: false },
      { text: 'Наличия множественного наследования', isRight: false },
      { text: 'Наличия виртуальных методов', isRight: true },
      { text: 'Использования виртуального наследования', isRight: false },
      { text: 'Нет правильных ответов', isRight: false },
    ],
  },
  {
    question: '32. Прием программирования Singleton это:',
    answers: [
      {
        text: 'объект, создаваемый в более чем одном экземпляре',
        isRight: false,
      },
      { text: 'класс, не имеющий объектов', isRight: false },
      { text: 'объект, создаваемый в единственном экземпляре', isRight: true },
      {
        text: 'объект, реализующий некоторый интерфейс путем обращения к другому объекту через свойственный ему интерфейс',
        isRight: false,
      },
      {
        text: 'объект-заместитель, перенаправляющий вызовы к замещаемому тяжеловесному объекту',
        isRight: false,
      },
    ],
  },
  {
    question:
      '33. В каком CASE-средстве больше всего инструментов у диаграммы Component?',
    answers: [
      { text: 'Во всех средствах их одинаковое количество', isRight: false },
      { text: 'Rational XDE, Enterprise Architect', isRight: false },
      { text: 'Rational XDE', isRight: false },
      { text: 'Enterprise Architect', isRight: true },
      { text: 'Rational Rose', isRight: false },
    ],
  },
  {
    question:
      '34. Что из перечисленного не может входить в статический (static) класс:',
    answers: [
      { text: 'свойство', isRight: false },
      { text: 'метод', isRight: false },
      { text: 'поле', isRight: false },
      { text: 'конструктор', isRight: false },
      { text: 'все из вышеперечисленного может входить', isRight: true },
    ],
  },
  {
    question:
      '35. В каком случае будет перегружен метод? a) изменён тип возвращаемого значения; b) изменён модификатор доступа; c) изменён набор параметров',
    answers: [
      { text: 'b и c', isRight: false },
      { text: 'только a', isRight: false },
      { text: 'a и c', isRight: false },
      { text: 'a и b', isRight: false },
      { text: 'только c', isRight: true },
    ],
  },
  {
    question: '36. На какой парадигме основано большинство CASE-средств?',
    answers: [
      { text: 'Метод / нотация / средство', isRight: false },
      { text: 'Метод /методология /технология', isRight: false },
      { text: 'Процесс/ инструмент/ нотация', isRight: false },
      {
        text: 'Автоматизация /стандартизация / метод/ средство',
        isRight: false,
      },
      { text: 'Методология / метод / нотация / средство', isRight: true },
    ],
  },
  {
    question: '37. Что означает ранжирование проектного риска?',
    answers: [
      { text: 'Подготовка к работе с каждым элементом риска', isRight: false },
      { text: 'Устранение или разрешение элементов риска', isRight: false },
      {
        text: 'Упорядочение элементов риска по степени их влияния',
        isRight: true,
      },
      {
        text: 'Оценка вероятности и величины потери по каждому элементу риска',
        isRight: false,
      },
      { text: 'Выявление элементов риска в проекте', isRight: false },
    ],
  },
  {
    question:
      '38. Расставьте в порядке возрастания «размера» понятия CASE-средство, CASE-система, CASE-индустрия, CASE-технология?',
    answers: [
      {
        text: 'CASE-технология, CASE-система, CASE-индустрия, CASE-средство',
        isRight: false,
      },
      {
        text: 'CASE-система, CASE-средство, CASE-индустрия, CASE-технология',
        isRight: false,
      },
      {
        text: 'CASE-средство, CASE-технология, CASE-индустрия, CASE-система',
        isRight: false,
      },
      {
        text: 'CASE-индустрия, CASE-технология, CASE-система, CASE-средство',
        isRight: false,
      },
      {
        text: 'CASE-средство, CASE-система, CASE-технология, CASE-индустрия',
        isRight: true,
      },
    ],
  },
  {
    question: '39. Что характерно для проекта для постоянного заказчика?',
    answers: [
      { text: 'Уязвимость и сложность разработки', isRight: false },
      {
        text: 'Низкий уровень автоматизации и высокая стоимость',
        isRight: false,
      },
      { text: 'Модульность и применение тяжелой методологии', isRight: false },
      {
        text: 'Принцип модульности и высокий уровень автоматизации',
        isRight: false,
      },
      {
        text: 'Применение легкой методологии и отсутствие необходимости в сертификации',
        isRight: true,
      },
    ],
  },
  {
    question: '40. Что происходит на стадии ввода в действие в технологии RUP?',
    answers: [
      {
        text: 'Создается продукт, готовый к передаче конечным пользователям',
        isRight: false,
      },
      { text: 'Строится архитектура создаваемой системы', isRight: false },
      {
        text: 'Передача готового продукта в распоряжение пользователей',
        isRight: true,
      },
      { text: 'Готовится документации', isRight: false },
      { text: 'Строятся варианты использования', isRight: false },
    ],
  },
  {
    question: '41.С какого элемента всегда начинается диаграмма Activity?',
    answers: [
      { text: 'Start State', isRight: true },
      { text: 'State', isRight: false },
      { text: 'Object', isRight: false },
      { text: 'Actor', isRight: false },
      { text: 'End State', isRight: false },
    ],
  },
  {
    question: '42.В каких случаях используется прием фабричный метод?',
    answers: [
      {
        text: 'должен быть ровно один экземпляр некоторого класса',
        isRight: false,
      },
      {
        text: 'Когда хотите использовать существующий класс, но его интерфейс не соответствует вашим потребностям',
        isRight: false,
      },
      { text: 'Для добавления обязанностей объектам', isRight: false },
      {
        text: 'Когда классу заранее неизвестно, объекты каких классов ему нужно создавать',
        isRight: true,
      },
      {
        text: 'Для доступа к содержимому агрегированных объектов без раскрытия их внутреннего представления',
        isRight: false,
      },
    ],
  },
  {
    question: '43.Что такое Reverse Engineer?',
    answers: [
      { text: 'Построение кода по модели', isRight: false },
      {
        text: 'Объединение программных модулей в одну систему',
        isRight: false,
      },
      { text: 'Выполнение обратного проектирования', isRight: false },
      { text: 'Проверка соответствия модели и кода', isRight: false },
      { text: 'Построение модели по исходному коду', isRight: true },
    ],
  },
  {
    question:
      '44.В объектно-ориентированных языках программирования полиморфизм обеспечивается с помощью:',
    answers: [
      { text: 'статических полей', isRight: false },
      { text: 'защищённых полей', isRight: false },
      { text: 'виртуальных методов', isRight: true },
      { text: 'передачи аргументов по ссылке', isRight: false },
      { text: 'ограничения доступа к полям и методам', isRight: false },
    ],
  },
  {
    question: '45.В каком отношении не могут быть объекты?',
    answers: [
      { text: 'Агрегации', isRight: false },
      { text: 'Базовом', isRight: true },
      { text: 'Композиции', isRight: false },
      { text: 'Наследовании', isRight: false },
      { text: 'Ассоциации', isRight: false },
    ],
  },
  {
    question:
      '46.Как связаны наследование интерфейсы Enumarable<T> Enumarator<T>?',
    answers: [
      { text: 'Enumarable<T> наследуется от Enumarator<T>', isRight: false },
      { text: 'Enumarator<T> наследуется от Enumarable<T>', isRight: false },
      { text: 'среди нижеприведенных нет правильного ответа', isRight: false },
      {
        text: 'используют пример программирования наблюдатель',
        isRight: false,
      },
      { text: 'не связаны наследованием', isRight: true },
    ],
  },
  {
    question: '47.Укажите основные стереотипы классов:',
    answers: [
      { text: 'Граничный класс, управление, прецедент', isRight: false },
      { text: 'Граничный класс, прецедент, сущность', isRight: false },
      { text: 'Управление, прецедент, сущность', isRight: false },
      { text: 'Артефакт, управление, сущность', isRight: false },
      { text: 'Граничный класс, управление, сущность', isRight: true },
    ],
  },
  {
    question:
      '48.Какой прием программирования (pattern of programming) используется для создания семейств зависимых между собой объектов?',
    answers: [
      { text: 'Наблюдатель', isRight: false },
      { text: 'Абстрактная фабрика', isRight: true },
      { text: 'Строитель', isRight: false },
      { text: 'Фабричный метод', isRight: false },
      { text: 'Прототип', isRight: false },
    ],
  },
  {
    question: '49.Вызов какого метода займет больше времени:',
    answers: [
      {
        text: 'обычный метод быстрее, виртульный и абстрактный одинаково',
        isRight: true,
      },
      { text: 'виртуальный метод', isRight: false },
      { text: 'абстрактный метод', isRight: false },
      { text: 'все вызываются одинаково быстро', isRight: false },
      { text: 'обычный метод', isRight: false },
    ],
  },
  {
    question:
      '50.Какой из этих приемов программирования является прием создания объектов?',
    answers: [
      { text: 'Мост', isRight: false },
      { text: 'Декоратор', isRight: false },
      { text: 'Абстрактная фабрика', isRight: true },
      { text: 'Адаптер', isRight: false },
      { text: 'Компоновщик', isRight: false },
    ],
  },
  {
    question:
      '51.К какому типу диаграмм относятся диаграммы Statechart и Activity?',
    answers: [
      { text: 'Взаимодействия классов', isRight: false },
      { text: 'Взаимодействия классов и объектов', isRight: false },
      { text: 'Взаимодействия объектов', isRight: false },
      { text: 'Взаимодействия программных модулей', isRight: false },
      { text: 'Состояний объектов', isRight: true },
    ],
  },
  {
    question: '52.Что определяет уровень автоматизации CASE-средства?',
    answers: [
      {
        text: 'Процент автоматизированных операций от их общего количества',
        isRight: true,
      },
      { text: 'Тип используемых ресурсов', isRight: false },
      { text: 'Скорость обработки информации', isRight: false },
      { text: 'Используемую нотацию', isRight: false },
      { text: 'Используемую методологию', isRight: false },
    ],
  },
  {
    question:
      '53.Какой прием предоставляет способ последовательного доступа ко всем элементам составного объекта, не раскрывая его внутреннего представления?',
    answers: [
      { text: 'Посетитель', isRight: false },
      { text: 'Строитель', isRight: false },
      { text: 'Мост', isRight: false },
      { text: 'Наблюдатель', isRight: false },
      { text: 'Итератор', isRight: true },
    ],
  },
  {
    question:
      '54.Какие типы шаблонов чаще всего используются вместе с UML- диаграммами?',
    answers: [
      { text: 'Архитектурные шаблоны', isRight: false },
      { text: 'Шаблоны анализа', isRight: false },
      { text: 'Шаблоны тестирования', isRight: false },
      { text: 'Шаблоны проектирования и реализации', isRight: true },
      { text: 'Шаблоны реализации и тестирования', isRight: false },
    ],
  },
  {
    question:
      '55.Какой из перечисленных объектов является приемом, структурирующим объекты?',
    answers: [
      { text: 'Компоновщик', isRight: true },
      { text: 'Одиночка', isRight: false },
      { text: 'Состояние', isRight: false },
      { text: 'Итератор', isRight: false },
      { text: 'Наблюдатель', isRight: false },
    ],
  },
  {
    question:
      '56.Какие из следующих итерационных методологий появились раньше других?',
    answers: [
      { text: 'Средние', isRight: false },
      { text: 'Объектно-ориентированные', isRight: false },
      { text: 'Легкие', isRight: false },
      { text: 'Тяжелые', isRight: true },
      { text: 'Клиент-серверные', isRight: false },
    ],
  },
  {
    question: '57.Что такое деструктор?',
    answers: [
      { text: 'Метод, определяющий размер объекта в байтах', isRight: false },
      {
        text: 'Метод, который выполняется прежде, чем объект будет уничтожен',
        isRight: true,
      },
      {
        text: 'Функция, которая уничтожает объекты других классов',
        isRight: false,
      },
      {
        text: 'Метод, который должен открывать динамическую область для экземпляра класса',
        isRight: false,
      },
      {
        text: 'Метод, который должен отслеживать данные в экземпляре класса в процессе работы',
        isRight: false,
      },
    ],
  },
  {
    question: '58. Все элементы интерфейса по определению являются:',
    answers: [
      { text: 'private abstract', isRight: false },
      { text: 'public virtual', isRight: false },
      { text: 'public abstract', isRight: true },
      { text: 'private virtual', isRight: false },
      { text: 'protected abstract', isRight: false },
    ],
  },
  {
    question:
      '59. Как называется связь на диаграмме Class, с помощью которой отображается наследование одного класса от другого?',
    answers: [
      { text: 'Realization', isRight: false },
      { text: 'Dependency', isRight: false },
      { text: 'Generalization', isRight: true },
      { text: 'Aggregation association', isRight: false },
      { text: 'Association Class', isRight: false },
    ],
  },
  {
    question: '60. Что не входит в набор характеристик CASE-средства?',
    answers: [
      { text: 'Клиент-серверная модель', isRight: true },
      { text: 'Структура', isRight: false },
      { text: 'Входы/выходы', isRight: false },
      { text: 'Обозначение и наименование', isRight: false },
      { text: 'Цели и задачи', isRight: false },
    ],
  },
  {
    question:
      '61. Что означает инкапсуляция в объектно-ориентированной методологии?',
    answers: [
      { text: 'Ранжирование системы абстракций', isRight: false },
      {
        text: 'Способность класса принадлежать более чем одному типу',
        isRight: false,
      },
      {
        text: 'Отделение друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: true,
      },
      {
        text: 'Построение новых классов на основе существующих',
        isRight: false,
      },
      {
        text: 'Выделение существенных характеристик некоторого объекта',
        isRight: false,
      },
    ],
  },
  {
    question: '62. Какая разница между объектом и классом?',
    answers: [
      {
        text: 'Класс описывает категорию, к которой могут принадлежать или не принадлежать какие-либо объекты',
        isRight: false,
      },
      {
        text: 'При создании объекта вызывается конструктор, при создании класса - нет',
        isRight: false,
      },
      {
        text: 'Класс может иметь много экземпляров, а объект один или не одного',
        isRight: false,
      },
      { text: 'Разницы нет', isRight: false },
      {
        text: 'Объект – динамический модуль, класс – описание динамического модуля',
        isRight: true,
      },
    ],
  },
  {
    question: '63. Отношение реализации:',
    answers: [
      { text: 'является частным случаем композиции', isRight: false },
      { text: 'является частным случаем ассоциации', isRight: false },
      { text: 'является синонимом отношения зависимости', isRight: false },
      { text: 'не существует в ООП', isRight: false },
      { text: 'является отношением типа наследования', isRight: true },
    ],
  },
  {
    question:
      '64. Какой из элементов не входит в парадигму, на которой основано большинство CASE-средств?',
    answers: [
      { text: 'Метод', isRight: false },
      { text: 'Нотация', isRight: false },
      { text: 'Технология', isRight: true },
      { text: 'Методология', isRight: false },
      { text: 'Средство', isRight: false },
    ],
  },
  {
    question: '65. Как называется основной элемент диаграммы Component?',
    answers: [
      { text: 'Модуль', isRight: false },
      { text: 'Функция', isRight: false },
      { text: 'Объект', isRight: false },
      { text: 'Компонент', isRight: true },
      { text: 'Класс', isRight: false },
    ],
  },
  {
    question:
      '66. Для чего в Enterprise Architect предназначен шаблон модели вариантов использования?',
    answers: [
      {
        text: 'Для составления набора тестов и планов тестирования, которые выполняются в соответствии с текущей моделью',
        isRight: false,
      },
      {
        text: 'Для построения логической модели программной системы',
        isRight: false,
      },
      {
        text: 'Для построения каталога требований конечных пользователей и отношений между ними',
        isRight: false,
      },
      {
        text: 'Для определения построения компонентов программы на физическом уровне',
        isRight: false,
      },
      {
        text: 'Для описания системы в терминах вариантов использования',
        isRight: true,
      },
    ],
  },
  {
    question:
      '67. Какие из следующих приемов программирования (patterns of programming) относятся к порождающим? a) Компоновщик; b) Одиночка; c) Посетитель; d) Прототип',
    answers: [
      { text: 'a, b', isRight: false },
      { text: 'a, c', isRight: false },
      { text: 'b, c', isRight: false },
      { text: 'c, d', isRight: false },
      { text: 'b, d', isRight: true },
    ],
  },
  {
    question: '68. В чем отличие абстрактного класса от интерфейса?',
    answers: [
      {
        text: 'Класс определяет сущность, интерфейс определяет поведение',
        isRight: false,
      },
      {
        text: 'Абстрактный класс содержит реализацию, интерфейс – нет',
        isRight: false,
      },
      {
        text: 'Класс содержит поля и методы, интерфейс – только методы',
        isRight: true,
      },
      {
        text: 'Объект абстрактного класса можно создать, объект интерфейса – нет',
        isRight: false,
      },
      {
        text: 'Класс содержит конструкторы и методы, интерфейс – только методы',
        isRight: false,
      },
    ],
  },
  {
    question: '69. Когда не выполняют синхронизацию модели и кода?',
    answers: [
      { text: 'В момент активизации модели', isRight: false },
      { text: 'В ходе построения модели', isRight: true },
      { text: 'В момент сохранения кода после его изменения', isRight: false },
      { text: 'В момент сохранения модели', isRight: false },
      { text: 'В момент активизации окна кода', isRight: false },
    ],
  },
  {
    question:
      '70. Как называется механизм объектно-ориентированного программирования, позволяющий описать новый класс на основе уже существующего, при этом свойства и функциональность родительского класса заимствуются новым классом?',
    answers: [
      { text: 'Агрегация', isRight: false },
      { text: 'Инкапсуляция', isRight: false },
      { text: 'Абстракция', isRight: false },
      { text: 'Наследование', isRight: true },
      { text: 'Полиморфизм', isRight: false },
    ],
  },
  {
    question: '71. Свойство класса это:',
    answers: [
      {
        text: 'метод, позволяющий устанавливать значение поля',
        isRight: false,
      },
      {
        text: 'метод, устанавливающий или возвращающий значение поля',
        isRight: true,
      },
      {
        text: 'свойство класса ничем не отличается от поля класса',
        isRight: false,
      },
      { text: 'метод, возвращающий количество полей класса', isRight: false },
      { text: 'метод, возвращающий значение поля', isRight: false },
    ],
  },
  {
    question:
      '72. Выберите верное утверждение: a) Агрегация и композиция являются частными случаями ассоциации; b) Композиция – это сильная ассоциация (содержащийся объект полностью зависит от объекта контейнера); c) Агрегация – это слабая ассоциация (содержащийся объект не зависит от объекта контейнера); d) Агрегация – это сильная ассоциация; e) Композиция – это слабая ассоциация',
    answers: [
      { text: 'b, c', isRight: false },
      { text: 'a, b, c', isRight: true },
      { text: 'a, d, e', isRight: false },
      { text: 'a, b, d', isRight: false },
      { text: 'd, e', isRight: false },
    ],
  },
  {
    question:
      '71. К каким критериям развития CASE-средств относится показатель непрерывности процесса проектирования?',
    answers: [
      { text: 'Технологическим', isRight: false },
      { text: 'Энергетическим', isRight: false },
      { text: 'Экономическим', isRight: false },
      { text: 'Функциональным', isRight: true },
      { text: 'Техническим', isRight: false },
    ],
  },
  {
    question: '72. На какие категории делят CASE-средства?',
    answers: [
      { text: 'Легкие, средние и тяжелые', isRight: true },
      { text: 'Тяжелые и легкие', isRight: false },
      { text: 'Дешевые и легкие', isRight: false },
      { text: 'Тяжелые и дорогие', isRight: false },
      { text: 'Дешевые и дорогие', isRight: false },
    ],
  },
  {
    question:
      '73. Как называется способность объекта скрывать свои данные и реализацию от других объектов системы?',
    answers: [
      { text: 'Агрегация', isRight: false },
      { text: 'Наследование', isRight: false },
      { text: 'Абстракция', isRight: false },
      { text: 'Инкапсуляция', isRight: true },
      { text: 'Полиморфизм', isRight: false },
    ],
  },
  {
    question: '74 Что показывает связь Generalization на диаграмме Class?',
    answers: [
      { text: 'Наследование между классами', isRight: true },
      { text: 'Зависимость между классами', isRight: false },
      { text: 'Инкапсуляцию', isRight: false },
      {
        text: 'Использование одним классом объектов другого класса',
        isRight: false,
      },
      { text: 'Агрегацию', isRight: false },
    ],
  },
  {
    question: '75. Для чего предназначена информационная система?',
    answers: [
      { text: 'Для принятия решений', isRight: false },
      { text: 'Для планирования процессов', isRight: false },
      { text: 'Для хранения, поиска и обработки информации', isRight: true },
      { text: 'Для автоматического управления объектами', isRight: false },
      { text: 'Для автоматизации проектирования', isRight: false },
    ],
  },
  {
    question:
      '76. Что выполняется на этапе проектирования программного средства?',
    answers: [
      {
        text: 'Формальная проверка соответствия ПС всем техническим требованиям',
        isRight: false,
      },
      {
        text: 'Фиксация технических решений, создание учебных материалов и инструкций для пользователей',
        isRight: false,
      },
      { text: 'Управление программным средством', isRight: false },
      {
        text: 'Переход от спецификации к разработке архитектуры ПС',
        isRight: true,
      },
      { text: 'Написание программного кода', isRight: false },
    ],
  },
  {
    question: '77. Для чего предназначены шаблоны тестирования?',
    answers: [
      {
        text: 'Для уточнения структуры подсистем или компонентов программной системы и отношений между ними',
        isRight: false,
      },
      {
        text: 'Для спецификации фундаментальных схем структуризации программных систем',
        isRight: false,
      },
      { text: 'Для написания программного кода', isRight: false },
      {
        text: 'Для представления общей организации процесса тестирования программных систем',
        isRight: true,
      },
      {
        text: 'Для представления общей организации процесса моделирования',
        isRight: false,
      },
    ],
  },
  {
    question: '78. Выберите неверное утверждение для приема декоратор:',
    answers: [
      { text: 'также известен как обёртка', isRight: false },
      {
        text: 'динамически добавляет новые обязанности объекту',
        isRight: false,
      },
      { text: 'нет правильных ответов', isRight: false },
      { text: 'структурный прием', isRight: false },
      { text: 'прием поведения', isRight: true },
    ],
  },
  {
    question:
      '79. Для чего на диаграмме Class используется стереотип сущность?',
    answers: [
      {
        text: 'Для координации работы других классов приложения',
        isRight: false,
      },
      {
        text: 'Он показывает, что класс предназначен для взаимодействия с внешними актерами и стоит на границе системы',
        isRight: false,
      },
      {
        text: 'Для отображения принципа модульности в системе',
        isRight: false,
      },
      { text: 'Для отображения иерархии в системе', isRight: false },
      {
        text: 'Для моделирования классов, которые отвечают за хранение определенной информации',
        isRight: true,
      },
    ],
  },
  {
    question:
      '80. Что выполняется на этапе документирования программного средства?',
    answers: [
      {
        text: 'Формальная проверка соответствия ПС всем техническим требованиям',
        isRight: false,
      },
      { text: 'Контроль корректности ПС', isRight: false },
      {
        text: 'Фиксация технических решений, создание учебных материалов и инструкций для пользователей',
        isRight: true,
      },
      { text: 'Управление программным средством', isRight: false },
      { text: 'Написание программного кода', isRight: false },
    ],
  },
  {
    question: '81. Для чего предназначен язык UML?',
    answers: [
      {
        text: 'UML – это язык объектно-ориентированного программирования',
        isRight: false,
      },
      {
        text: 'UML – это язык высокоуровневого программирования',
        isRight: false,
      },
      {
        text: 'UML – это язык низкоуровневого программирования',
        isRight: false,
      },
      { text: 'UML – это язык для разработки интерфейсов', isRight: false },
      {
        text: 'UML – это язык, предназначенный для описания проектов с помощью графических примитивов',
        isRight: true,
      },
    ],
  },
  {
    question:
      '82. Если класс в C# объявлен без модификатора доступа непосредственно в пространстве имён (т.е. не вложен в другие классы или структуры), то какой модификатор будет по умолчанию?',
    answers: [
      { text: 'Protected internal', isRight: false },
      { text: 'Internal', isRight: true },
      { text: 'Protected', isRight: false },
      { text: 'Private', isRight: false },
      { text: 'Public', isRight: false },
    ],
  },
  {
    question:
      '83.В чем заключается проблема виртуальных методов в конструкторах и деструкторах в C++?',
    answers: [
      { text: 'Нельзя вызывать виртуальные методы', isRight: false },
      { text: 'Нет правильных ответов', isRight: false },
      { text: 'Тип возвращаемого значения должен быть void', isRight: false },
      { text: 'Виртуальные методы должны быть без параметров', isRight: false },
      {
        text: 'Виртуальные методы работают как не виртуальные',
        isRight: true,
      },
    ],
  },
  {
    question:
      '84.Что означает синхронизация кода и модели в среде автоматизированного синтеза программных средств?',
    answers: [
      {
        text: 'Внесение изменений в код и (или) модель с целью их соответствия друг другу',
        isRight: true,
      },
      { text: 'Генерация кода по модели', isRight: false },
      { text: 'Построение диаграммы Class по коду', isRight: false },
      { text: 'Проверка корректности кода и модели', isRight: false },
      { text: 'Построение модели по коду', isRight: false },
    ],
  },
  {
    question: '85.Событие – это …?',
    answers: [
      { text: 'список делегатов', isRight: true },
      { text: 'атрибут класса', isRight: false },
      { text: 'нет правильных ответов', isRight: false },
      { text: 'исключительная ситуация', isRight: false },
      { text: 'ссылка на метод', isRight: false },
    ],
  },
  {
    question: '86.Что определяет метод в CASE-технологии?',
    answers: [
      {
        text: 'Шаги работы, их последовательность, правила распределения и назначения методов',
        isRight: false,
      },
      { text: 'Нотацию', isRight: false },
      {
        text: 'Процедуру генерации описаний компонентов программного обеспечения',
        isRight: true,
      },
      { text: 'Используемые средства', isRight: false },
      { text: 'Тип используемых ресурсов', isRight: false },
    ],
  },
  {
    question:
      '87.Если поля, о которых не должен знать пользователь, объявить с модификатором доступа public, то какой принцип ООП мы нарушим?',
    answers: [
      { text: 'Нет правильного ответа', isRight: false },
      { text: 'Наследование', isRight: false },
      { text: 'Абстракция', isRight: false },
      { text: 'Инкапсуляция', isRight: true },
      { text: 'Полиморфизм', isRight: false },
    ],
  },
  {
    question:
      '88.Какая группа критериев не используется при оценке уровня совершенства CASE-средства?',
    answers: [
      { text: 'Технические', isRight: true },
      { text: 'Функциональные', isRight: false },
      { text: 'Экономические', isRight: false },
      { text: 'Эргономические', isRight: false },
      { text: 'Технологические', isRight: false },
    ],
  },
  {
    question: '89.Какая роль у средства в CASE-технологии?',
    answers: [
      { text: 'Выбирает ресурсы', isRight: false },
      { text: 'Поддерживает нотацию', isRight: false },
      { text: 'Реализует процедуры и функции', isRight: false },
      { text: 'Реализует алгоритмы', isRight: false },
      {
        text: 'Поддерживает методы на основе принятой нотации',
        isRight: true,
      },
    ],
  },
  {
    question: '90.Что характерно для тиражируемого программного продукта?',
    answers: [
      { text: 'Уязвимость и сложность разработки', isRight: false },
      {
        text: 'Принцип модульности и высокий уровень автоматизации',
        isRight: true,
      },
      { text: 'Модульность и применение тяжелой методологии', isRight: false },
      { text: 'Применение тяжелой методологии', isRight: false },
      {
        text: 'Низкий уровень автоматизации и высокая стоимость',
        isRight: false,
      },
    ],
  },
  {
    question:
      '91.Какой инструмент позволяет структурировать область диаграммы?',
    answers: [
      { text: 'Swimlanes', isRight: true },
      { text: 'Activity', isRight: false },
      { text: 'Decision', isRight: false },
      { text: 'Synchronizations', isRight: false },
      { text: 'State', isRight: false },
    ],
  },
  {
    question: '92.Перечислите основные инструменты Web Modeler',
    answers: [
      { text: 'Класс, компонент, форма', isRight: false },
      {
        text: 'Класс, клиентская страница, серверная страница',
        isRight: false,
      },
      {
        text: 'Серверная страница, клиентская страница, HTML форма',
        isRight: true,
      },
      {
        text: 'Компонент, клиентская страница, серверная страница',
        isRight: false,
      },
      {
        text: 'Класс, объект, серверная страница, клиентская страница, HTML форма',
        isRight: false,
      },
    ],
  },
  {
    question:
      '93.К какой методологии относится Rational Unifier Process (RUP)?',
    answers: [
      { text: 'Легкой и тяжелой', isRight: false },
      { text: 'Легкой', isRight: false },
      { text: 'Средней', isRight: true },
      { text: 'Тяжелой', isRight: false },
      { text: 'Можно отнести к любой', isRight: false },
    ],
  },
  {
    question:
      '94.На каком этапе жизненного цикла программного средства строится диаграмма Sequence?',
    answers: [
      { text: 'Сопровождение', isRight: false },
      { text: 'Тестирование', isRight: false },
      { text: 'Проектирование', isRight: true },
      { text: 'Анализ требований', isRight: false },
      { text: 'Программирование', isRight: false },
    ],
  },
  {
    question: '95.Какой диаграмме принадлежит значок Device?',
    answers: [
      { text: 'Никакой', isRight: false },
      { text: 'Class', isRight: false },
      { text: 'Activity', isRight: false },
      { text: 'Use Case', isRight: false },
      { text: 'Deployment', isRight: true },
    ],
  },
  {
    question: '96.Укажите основные элементы диаграммы Deployment',
    answers: [
      { text: 'Актеры и роли', isRight: false },
      { text: 'Процессор и устройство', isRight: true },
      { text: 'Компоненты и связи между ними', isRight: false },
      { text: 'Объекты и классы', isRight: false },
      { text: 'Объекты и их состояния', isRight: false },
    ],
  },
  {
    question:
      '97.Что означает модульность в объектно-ориентированной методологии?',
    answers: [
      {
        text: 'Декомпозиция системы на ряд внутренне сильно связанных, но слабо связанных между собой частей',
        isRight: true,
      },
      {
        text: 'Выделение существенных характеристик некоторого объекта',
        isRight: false,
      },
      { text: 'Ранжирование системы абстракций', isRight: false },
      {
        text: 'Способность класса принадлежать более чем одному типу',
        isRight: false,
      },
      {
        text: 'Отделение друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: false,
      },
    ],
  },
  {
    question:
      '98.Целью какого приема программирования (patter of programming) является расширение функциональности класса или же её изменения без использования механизма наследования?',
    answers: [
      { text: 'Итератор', isRight: false },
      { text: 'Декоратор', isRight: true },
      { text: 'Компоновщик', isRight: false },
      { text: 'Приспособленец', isRight: false },
      { text: 'Прокси', isRight: false },
    ],
  },
  {
    question:
      '99.Что означает наследование в объектно-ориентированной методологии?',
    answers: [
      { text: 'Ранжирование системы абстракций', isRight: false },
      {
        text: 'Построение новых классов на основе существующих с возможностью добавления или переопределения данных и методов',
        isRight: true,
      },
      {
        text: 'Выделение существенных характеристик некоторого объекта',
        isRight: false,
      },
      {
        text: 'Отделение друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: false,
      },
      {
        text: 'Способность класса принадлежать более чем одному типу',
        isRight: false,
      },
    ],
  },
  {
    question:
      '100.Перечислите основные принципы унифицированного процесса разработки программных средств.',
    answers: [
      {
        text: 'Построение системы на базе архитектуры программного обеспечения (ПО), наличие средств автоматизированной разработки',
        isRight: false,
      },
      {
        text: 'Наличие средств автоматизированной разработки, активные информационные ресурсы, итерационный и инкрементный подход к разработке ПО',
        isRight: false,
      },
      {
        text: 'Наличие средств автоматизированной разработки, активные информационные ресурсы, управление вариантами использования',
        isRight: false,
      },
      {
        text: 'Наличие средств автоматизированной разработки, активные информационные ресурсы, управление вариантами использования',
        isRight: false,
      },
      {
        text: 'Итерационный и инкрементный подход к созданию ПО, управление вариантами использования, построение системы на базе архитектуры ПО',
        isRight: true,
      },
    ],
  },
  {
    question:
      '101.Какой прием программирования обеспечивает существование одного экземпляра некоторого класса и предоставляет единую точку доступа к нему?',
    answers: [
      { text: 'Одиночка', isRight: true },
      { text: 'Компоновщик', isRight: false },
      { text: 'Адаптер', isRight: false },
      { text: 'Декоратор', isRight: false },
      { text: 'Мост', isRight: false },
    ],
  },
  {
    question: '102.К какому типу технических систем относятся CASE-системы?',
    answers: [
      { text: 'Экспертные системы', isRight: false },
      {
        text: 'Системы автоматизированной разработки программных средств',
        isRight: true,
      },
      { text: 'Системы автоматического управления', isRight: false },
      { text: 'Системы распознавания', isRight: false },
      { text: 'Информационные системы', isRight: false },
    ],
  },
  {
    question: '103.Создать свой класс-атрибут в языке С# можно с помощью:',
    answers: [
      {
        text: 'использования ключевого слова Attribute при описании класса',
        isRight: false,
      },
      { text: 'передачи аргумента Attribute в конструктор', isRight: false },
      { text: 'наследования от класса Attribute', isRight: true },
      { text: 'создания поля Attribute в классе', isRight: false },
      { text: 'создания метода Attribute в классе', isRight: false },
    ],
  },
  {
    question:
      '104.Что выполняется на этапе анализа технических требований программного средства?',
    answers: [
      { text: 'Управление программным средством', isRight: false },
      { text: 'Программирование', isRight: false },
      { text: 'Контроль корректности ПС', isRight: false },
      {
        text: 'Формальная проверка соответствия ПС всем техническим требованиям',
        isRight: false,
      },
      {
        text: 'Определение функций, которые должна реализовать создаваемая система',
        isRight: true,
      },
    ],
  },
  {
    question:
      '105. Как называется совокупность задач, которые приходится решать при создании программного средства?',
    answers: [
      { text: 'Проблема', isRight: false },
      { text: 'Проект', isRight: true },
      { text: 'Система', isRight: false },
      { text: 'Комплекс', isRight: false },
      { text: 'План', isRight: false },
    ],
  },
  {
    question:
      '106. С помощью какого ключевого слова можно создать потокобезопасную реализацию приема одиночка?',
    answers: [
      { text: 'Fixed', isRight: false },
      { text: 'Lock', isRight: true },
      { text: 'Using', isRight: false },
      { text: 'Sealed', isRight: false },
      { text: 'Static', isRight: false },
    ],
  },
  {
    question:
      '107. К какому типу диаграмм относятся диаграммы Sequence и Collaboration?',
    answers: [
      { text: 'Взаимодействия объектов и классов', isRight: false },
      { text: 'Состояний объектов', isRight: false },
      { text: 'Взаимодействия классов', isRight: false },
      { text: 'Взаимодействия объектов', isRight: true },
      { text: 'Взаимодействия программных модулей', isRight: false },
    ],
  },
  {
    question: '108. Что является элементами языка UML?',
    answers: [
      { text: 'Латинский алфавит', isRight: false },
      { text: 'Графические примитивы', isRight: true },
      { text: 'Векторы', isRight: false },
      { text: 'Векторы и латинский алфавит', isRight: false },
      { text: 'Векторы и арифметические операции', isRight: false },
    ],
  },
  {
    question: '109. Какая нотация используется в CASE-технологии?',
    answers: [
      { text: 'Enterprise Architect', isRight: false },
      { text: 'Rational XDE', isRight: false },
      { text: 'C#', isRight: false },
      { text: 'UML', isRight: true },
      { text: 'Rational Rose', isRight: false },
    ],
  },
  {
    question:
      '110.Перечислите главные различия между диаграммами Sequence и Collaboration',
    answers: [
      { text: 'У диаграммы Sequence больше инструментов', isRight: false },
      { text: 'У диаграммы Collaboration больше инструментов', isRight: false },
      {
        text: 'Диаграмма Sequence отражает взаимодействие объектов во времени, а диаграмма Collaboration – взаимодействие объектов в пространстве',
        isRight: true,
      },
      {
        text: 'По диаграмме Collaboration можно генерировать код приложения, а по диаграмме его нельзя Sequence генерировать',
        isRight: false,
      },
      {
        text: 'По диаграмме Sequence можно генерировать код приложения, а по диаграмме его нельзя Collaboration генерировать',
        isRight: false,
      },
    ],
  },
  {
    question:
      '111. Что отражают связи между элементами на диаграмме Deployment?',
    answers: [
      {
        text: 'Взаимодействие между аппаратными и программными частями системы',
        isRight: true,
      },
      { text: 'Взаимодействия между программными модулями', isRight: false },
      {
        text: 'Взаимодействия между объектами и классами системы',
        isRight: false,
      },
      {
        text: 'Взаимодействие между несколькими программными средствами',
        isRight: false,
      },
      {
        text: 'Взаимодействия между аппаратными частями системы',
        isRight: false,
      },
    ],
  },
  {
    question: '112.Что означает идентификация проектного риска?',
    answers: [
      { text: 'Выявление элементов риска в проекте', isRight: true },
      {
        text: 'Оценка вероятности и величины потери по каждому элементу риска',
        isRight: false,
      },
      { text: 'Устранение или разрешение элементов риска', isRight: false },
      {
        text: 'Упорядочение элементов риска по степени их влияния',
        isRight: false,
      },
      { text: 'Подготовка к работе с каждым элементом риска', isRight: false },
    ],
  },
  {
    question: '113. Какие ресурсы не используют CASE-средства?',
    answers: [
      { text: 'Дорогие', isRight: false },
      { text: 'Дешевые', isRight: false },
      { text: 'Пассивные', isRight: true },
      { text: 'Дорогие активные', isRight: false },
      { text: 'Активные', isRight: false },
    ],
  },
  {
    question:
      '114.Укажите, что является инструментом для разработки программных средств',
    answers: [
      { text: 'CASE-технология', isRight: false },
      { text: 'Унифицированный процесс разработки', isRight: false },
      { text: 'Объектно-ориентированный подход', isRight: false },
      { text: 'Enterprise Architect', isRight: true },
      { text: 'Язык UML', isRight: false },
    ],
  },
  {
    question:
      '115.Целью какого приема программирования (pattern of programming) является расширение функциональности класса или же её изменения без использования механизма наследования?',
    answers: [
      { text: 'Компоновщик', isRight: false },
      { text: 'Итератор', isRight: false },
      { text: 'Декоратор', isRight: false },
      { text: 'Прокси', isRight: false },
      { text: 'Приспособленец', isRight: true },
    ],
  },
  {
    question: '116. Что является динамическими аспектами RUP?',
    answers: [
      { text: 'Этапы жизненного цикла программных систем', isRight: false },
      { text: 'Артефакты и прецеденты', isRight: false },
      { text: 'Временные промежутки (фазы, циклы, итерации)', isRight: true },
      { text: 'Актеры и роли', isRight: false },
      { text: 'Объекты и классы', isRight: false },
    ],
  },
  {
    question:
      '117. В основу работы каких диаграмм положен принцип работы конечных автоматов?',
    answers: [
      { text: 'Class, Component', isRight: false },
      { text: 'Free Form', isRight: false },
      { text: 'Collaboration, Sequence', isRight: false },
      { text: 'Statechart, Activity', isRight: true },
      { text: 'Use Case, Class', isRight: false },
    ],
  },
  {
    question:
      '118. С помощью какого ключевого слова можно запретить наследование в C#?',
    answers: [
      { text: 'Private', isRight: false },
      { text: 'Lock', isRight: false },
      { text: 'Abstract', isRight: false },
      { text: 'Sealed', isRight: true },
      { text: 'Fixed', isRight: false },
    ],
  },
  {
    question: '119.Что выполняется на этапе верификации программного средства?',
    answers: [
      { text: 'Управление программным средством', isRight: false },
      { text: 'Контроль корректности программного средства', isRight: false },
      {
        text: 'Формальная проверка соответствия программного средства всем техническим требованиям',
        isRight: true,
      },
      { text: 'Разработка документации', isRight: false },
      { text: 'Разработка программного кода', isRight: false },
    ],
  },
  {
    question: '120. Класс, параметризованный типом данных называется:',
    answers: [
      { text: 'шаблон', isRight: true },
      { text: 'трафарет', isRight: false },
      { text: 'модель', isRight: false },
      { text: 'лекало', isRight: false },
      { text: 'стандарт', isRight: false },
    ],
  },
  {
    question:
      '121.Какая модель строится самой первой на основе диаграммы Class?',
    answers: [
      { text: 'Модель предметной области', isRight: true },
      { text: 'Модель прецедентов', isRight: false },
      { text: 'Модель анализа', isRight: false },
      { text: 'Бизнес-моедь', isRight: false },
      { text: 'Логическая модель', isRight: false },
    ],
  },
  {
    question: '122.Каким диаграммам принадлежит значок маркер уничтожения?',
    answers: [
      { text: 'Statechart, Activity', isRight: false },
      { text: 'Class, Component', isRight: false },
      { text: 'Sequence', isRight: true },
      { text: 'Free Form', isRight: false },
      { text: 'Use Case, Class', isRight: false },
    ],
  },
  {
    question:
      '123. Какие элементы диаграммы Sequence преобразуются в код в процессе кодогенерации?',
    answers: [
      { text: 'Вся диаграмма', isRight: true },
      { text: 'Объекты и их линии жизни', isRight: false },
      {
        text: 'По диаграмме Sequence не выполняется кодогенерация',
        isRight: false,
      },
      { text: 'Объекты и их состояния', isRight: false },
      { text: 'Объекты', isRight: false },
    ],
  },
  {
    question:
      '124.Для каких целей могут использовать Enterprise Architect разработчики?',
    answers: [
      { text: 'Для работы с кодом', isRight: false },
      { text: 'Для поддержки тестирования', isRight: false },
      {
        text: 'Для создания высокоуровневых моделей бизнес-процессов',
        isRight: true,
      },
      {
        text: 'Для соотнесения функциональных требований с вариантами использования, выполнения моделирования объектов в реальном времени',
        isRight: false,
      },
      {
        text: 'Для назначения ресурсов элементам, оценки рисков, объема работ, масштаба проекта',
        isRight: false,
      },
    ],
  },
  {
    question:
      '125.Что положено в основу классификации методологий создания программных продуктов на тяжелые, средние, легкие?',
    answers: [
      {
        text: 'Количество этапов жизненного цикла программных средств',
        isRight: false,
      },
      { text: 'Количество вложенных инвестиций', isRight: false },
      { text: 'Величина проекта и команды разработчиков', isRight: true },
      {
        text: 'Степень автоматизации процесса создания программного продукта',
        isRight: false,
      },
      {
        text: 'Количество вложенных инвестиций и временных затрат',
        isRight: false,
      },
    ],
  },
  {
    question:
      '126.К каким критериям относится показатель скорости обработки информации в CASE-средстве?',
    answers: [
      { text: 'Техническим', isRight: false },
      { text: 'Функциональным', isRight: true },
      { text: 'Экономическим', isRight: false },
      { text: 'Эргономическим', isRight: false },
      { text: 'Технологическим', isRight: false },
    ],
  },
  {
    question: '127.Какой инструмент не принадлежит диаграмме Class?',
    answers: [
      { text: 'Class', isRight: false },
      { text: 'Generalization', isRight: false },
      { text: 'Decision', isRight: true },
      { text: 'Package', isRight: false },
      { text: 'Interface', isRight: false },
    ],
  },
  {
    question: '128.Выберите неверное утверждение для приема адаптер:',
    answers: [
      {
        text: 'обеспечивает работу классов с несовместимыми интерфейсами',
        isRight: false,
      },
      {
        text: 'предоставляет способ последовательного доступа ко всем элементам составного объекта',
        isRight: true,
      },
      { text: 'структурный прием', isRight: false },
      { text: 'также известен как обёртка', isRight: false },
      {
        text: 'преобразует интерфейс одного класса в интерфейс другого',
        isRight: false,
      },
    ],
  },
  {
    question: '129.Какая методология положена в основу технологии RUP?',
    answers: [
      { text: 'Динамическое программирование', isRight: false },
      { text: 'Легкая', isRight: false },
      { text: 'Средняя', isRight: true },
      { text: 'Классическая', isRight: false },
      { text: 'Тяжелая', isRight: false },
    ],
  },
  {
    question:
      '130.С помощью какого ключевого слова можно ограничить возможные значения параметра-типа при описании шаблона в C#?',
    answers: [
      { text: 'value', isRight: false },
      { text: 'base', isRight: false },
      { text: 'from', isRight: false },
      { text: 'is', isRight: false },
      { text: 'where', isRight: true },
    ],
  },
  {
    question:
      '131.Есть класс, в нем объявили два метода, отличающихся только набором параметров. Какой принцип объектно-ориентированного программирования используется в данном примере?',
    answers: [
      { text: 'Структурный', isRight: false },
      { text: 'Наследование', isRight: false },
      { text: 'Объектный', isRight: false },
      { text: 'Полиморфизм', isRight: true },
      { text: 'Инкапсуляция', isRight: false },
    ],
  },
  {
    question: '132.Какого типа шаблонов не существует?',
    answers: [
      { text: 'Архитектурные шаблоны', isRight: false },
      { text: 'Шаблоны реализации', isRight: false },
      { text: 'Шаблоны тестирования', isRight: false },
      { text: 'Шаблоны кооперации', isRight: true },
      { text: 'Шаблоны проектирования', isRight: false },
    ],
  },
  {
    question: '133.Рефлексия это:',
    answers: [
      {
        text: 'способность программы модифицировать структуры других выполняемых программ',
        isRight: false,
      },
      {
        text: 'способность программы изучать и модифицировать свою структуру и поведение во время выполнения',
        isRight: true,
      },
      {
        text: 'способность компилятора изучать структуру и поведение программы',
        isRight: false,
      },
      {
        text: 'способность программы изучать структуры других выполняемых программ',
        isRight: false,
      },
      {
        text: 'способность программы изучать и модифицировать свою структуру и поведение во время компиляции',
        isRight: false,
      },
    ],
  },
  {
    question:
      '134.Что является главным результатом стадии конструирования в технологии RUP?',
    answers: [
      { text: 'Архитектура создаваемой системы', isRight: false },
      { text: 'План', isRight: false },
      { text: 'Варианты использования', isRight: false },
      { text: 'Набор документации', isRight: false },
      {
        text: 'Продукт, готовый к передаче конечным пользователям',
        isRight: true,
      },
    ],
  },
  {
    question: '135.Термин «агрегация» точнее всего описывает отношение между:',
    answers: [
      { text: 'вами и вашими друзьями', isRight: false },
      { text: 'вашей комнатой и мебелью в ней', isRight: true },
      { text: 'вами и вашими руками', isRight: false },
      { text: 'вами и вашей комнатой', isRight: false },
      { text: 'missing question', isRight: false },
    ],
  },
  {
    question: '136.Какой модуль выполняет кодогенерацию в Rational Rose?',
    answers: [
      { text: 'Browser', isRight: false },
      { text: 'Component Assigned Tool', isRight: false },
      { text: 'Model Assistant', isRight: true },
      { text: 'Data Modeler', isRight: false },
      { text: 'Web Modeler', isRight: false },
    ],
  },
  {
    question: '137.Что показывает на диаграмме Use Case связь access?',
    answers: [
      {
        text: 'Зависимость одного элемента диаграммы от другого на уровне доступа',
        isRight: true,
      },
      { text: 'Простые связи между элементами', isRight: false },
      {
        text: 'Прецедент, являющийся частью главного прецедента',
        isRight: false,
      },
      { text: 'Расширение прецедента', isRight: false },
      {
        text: 'Зависимость одного элемента диаграммы от другого, когда один элемент импортирует информацию из другого',
        isRight: false,
      },
    ],
  },
  {
    question:
      '138. Какая функция в C++, не будучи компонентом класса, имеет доступ к его защищенным и внутренних компонентов?',
    answers: [
      { text: 'Дружественная', isRight: true },
      { text: 'Статическая', isRight: false },
      { text: 'Полиморфная', isRight: false },
      { text: 'Виртуальная', isRight: false },
      { text: 'Шаблонная', isRight: false },
    ],
  },
  {
    question:
      '139.Что означает абстрагирование в объектно-ориентированной методологии?',
    answers: [
      {
        text: 'Отделение друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: false,
      },
      { text: 'Ранжирование системы абстракций', isRight: false },
      {
        text: 'Способность класса принадлежать более чем одному типу',
        isRight: false,
      },
      {
        text: 'Выделение существенных характеристик некоторого объекта',
        isRight: true,
      },
      {
        text: 'Построение новых классов на основе существующих',
        isRight: false,
      },
    ],
  },
  {
    question:
      '140.К каким критериям уровня развития CASE-средств относится показатель уровня автоматизации?',
    answers: [
      { text: 'Техническим', isRight: false },
      { text: 'Энергетическим', isRight: false },
      { text: 'Экономическим', isRight: false },
      { text: 'Технологическим', isRight: false },
      { text: 'Функциональным', isRight: true },
    ],
  },
  {
    question: '141.Что представляет собой UML-модель?',
    answers: [
      { text: 'Набор программных модулей', isRight: false },
      { text: 'Библиотеку процедур и функций', isRight: false },
      { text: 'Набор диаграмм', isRight: true },
      { text: 'Совокупность алгоритмов', isRight: false },
      { text: 'Набор графических файлов', isRight: false },
    ],
  },
  {
    question: '142.Для чего предназначена диаграмма Component?',
    answers: [
      {
        text: 'Для анализа взаимодействия между объектами и классами системы',
        isRight: false,
      },
      {
        text: 'Для анализа взаимодействия между объектами модели',
        isRight: false,
      },
      {
        text: 'Для отражения взаимодействия между программными модулями системы',
        isRight: true,
      },
      { text: 'Для анализа аппаратной части системы', isRight: false },
      {
        text: 'Для анализа взаимодействия между классами системы',
        isRight: false,
      },
    ],
  },
  {
    question:
      '143.Как называются компоненты компьютерных систем, которые многократно используются и выполняют в них типовые функции?',
    answers: [
      { text: 'Процедуры', isRight: false },
      { text: 'Программные модули', isRight: true },
      { text: 'Подсистемы', isRight: false },
      { text: 'Структурные элементы', isRight: false },
      { text: 'Функции', isRight: false },
    ],
  },
  {
    question:
      '144.На каком этапе жизненного цикла программного средства строится диаграмма Activity?',
    answers: [
      { text: 'Проектирование', isRight: true },
      { text: 'Сопровождение', isRight: false },
      { text: 'Анализ требований', isRight: false },
      { text: 'Тестирование', isRight: false },
      { text: 'Программирование', isRight: false },
    ],
  },
  {
    question:
      '145.Для чего в Enterprise Architect предназначен шаблон модели тестирования?',
    answers: [
      {
        text: 'Для определения построения компонентов программы на физическом уровне',
        isRight: false,
      },
      {
        text: 'Для описания системы в терминах вариантов использования',
        isRight: false,
      },
      {
        text: 'Для построения каталога требований конечных пользователей и отношений между ними',
        isRight: false,
      },
      {
        text: 'Для построения логической модели программной системы',
        isRight: false,
      },
      {
        text: 'Для составления набора тестов и планов тестирования, которые выполняются в соответствии с текущей моделью',
        isRight: true,
      },
    ],
  },
  {
    question: '146.Какие модели могут быть положены в основу CASE-систем?',
    answers: [
      { text: 'Статические и динамические', isRight: false },
      { text: 'Логические и физические', isRight: false },
      {
        text: 'Структурные, объектно-ориентированные, комбинированные',
        isRight: true,
      },
      { text: 'Модель данных, Web-модель', isRight: false },
      { text: 'Клиент-серверные, объектно-ориентированные', isRight: false },
    ],
  },
  {
    question:
      '147. Для какого из перечисленных приемов программирования (pattern of programming) лучше всего подходит метафора "матрешки"?',
    answers: [
      { text: 'Прокси', isRight: false },
      { text: 'Одиночка', isRight: false },
      { text: 'Декоратор', isRight: true },
      { text: 'Прототип', isRight: false },
      { text: 'Абстрактная фабрика', isRight: false },
    ],
  },
  {
    question:
      '148. Что представляет собой такой элемент объектно-ориентированного подхода, как иерархия?',
    answers: [
      {
        text: 'Это ограничение, накладываемое на класс объектов и препятствующее взаимозаменяемости различных классов',
        isRight: false,
      },
      {
        text: 'Это ранжированная или упорядоченная система абстракций',
        isRight: true,
      },
      {
        text: 'Это декомпозиция системы на ряд внутренне сильно связанных, но слабо связанных между собой модулей',
        isRight: false,
      },
      {
        text: 'Это процесс отделения друг от друга элементов объекта, определяющих его устройство и поведение',
        isRight: false,
      },
      {
        text: 'Это выделение существенных характеристик некоторого объекта',
        isRight: false,
      },
    ],
  },
  {
    question: '149. С какого элемента всегда начинается диаграмма Statechart?',
    answers: [
      { text: 'Start State', isRight: true },
      { text: 'Актер', isRight: false },
      { text: 'Object', isRight: false },
      { text: 'End State', isRight: false },
      { text: 'State', isRight: false },
    ],
  },
  {
    question:
      '150. На платформе .NET если исключение не обрабатывается программой, то оно обрабатывается:',
    answers: [
      { text: 'компилятором', isRight: false },
      { text: 'ОС', isRight: false },
      { text: 'линковщиком', isRight: false },
      { text: 'IDE', isRight: false },
      { text: 'CLR', isRight: true },
    ],
  },
  {
    question:
      '151. На каких UML-диаграммах связи между элементами всегда двунаправленные?',
    answers: [
      { text: 'Таких диаграмм нет', isRight: false },
      { text: 'Deployment', isRight: true },
      { text: 'Class', isRight: false },
      { text: 'Component', isRight: false },
      { text: 'Activity', isRight: false },
    ],
  },
  {
    question: '152. Что является главной особенностью CASE-технологии?',
    answers: [
      { text: 'Принцип модульности', isRight: false },
      { text: 'Распределенная обработка данных', isRight: false },
      { text: 'Автоматизация', isRight: true },
      { text: 'Разработка архитектуры', isRight: false },
      { text: 'Объектно-ориентированный подход', isRight: false },
    ],
  },
  {
    question: '153. Выберите неверное утверждение:',
    answers: [
      { text: 'нет правильных ответов', isRight: false },
      { text: 'класс может иметь только один базовый класс', isRight: false },
      { text: 'класс может не иметь интерфейсов', isRight: false },
      {
        text: 'класс может реализовать более одного интерфейса',
        isRight: false,
      },
      { text: 'класс может реализовать только один интерфейс', isRight: true },
    ],
  },
  {
    question:
      '154. Какие из следующих итерационных методологий появились позже других?',
    answers: [
      { text: 'Объектно-ориентированные', isRight: true },
      { text: 'Тяжелые', isRight: false },
      { text: 'Средние', isRight: false },
      { text: 'Легкие', isRight: false },
      { text: 'Клиент-серверные', isRight: false },
    ],
  },
  {
    question: '155. Какой модуль отсутствует в Rational Rose?',
    answers: [
      { text: 'Client-Server Model', isRight: true },
      { text: 'Model Assistant', isRight: false },
      { text: 'Web Modeler', isRight: false },
      { text: 'Data Modeler', isRight: false },
      { text: 'Component Assigned Tool', isRight: false },
    ],
  },
  {
    question:
      '156.Какая функция в C++, не являясь компонентом класса, имеет доступ к его защищенным и внутренним компонентам?',
    answers: [
      { text: 'Шаблонная', isRight: false },
      { text: 'Виртуальная', isRight: false },
      { text: 'Полиморфная', isRight: false },
      { text: 'Статическая', isRight: false },
      { text: 'Дружественная', isRight: true },
    ],
  },
  {
    question: '157. Какой инструмент не принадлежит диаграмме Activity?',
    answers: [
      { text: 'Decision', isRight: false },
      { text: 'Activity', isRight: false },
      { text: 'Destroy', isRight: true },
      { text: 'Swimlanes', isRight: false },
      { text: 'Synchronizations', isRight: false },
    ],
  },
  {
    question: '158. Что означает декомпозиция программной системы?',
    answers: [
      { text: 'Разделение', isRight: true },
      { text: 'Объединение', isRight: false },
      { text: 'Планирование', isRight: false },
      { text: 'Распараллеливание', isRight: false },
      { text: 'Управление', isRight: false },
    ],
  },
  {
    question: '159.Каким элементом завершается диаграмма Statechart?',
    answers: [
      { text: 'End State', isRight: true },
      { text: 'Object', isRight: false },
      { text: 'State', isRight: false },
      { text: 'Start State', isRight: false },
      { text: 'Actor', isRight: false },
    ],
  },
  {
    question: '160. Что означает разрешение проектного риска?',
    answers: [
      { text: 'Устранение элементов риска', isRight: true },
      { text: 'Выявление элементов риска в проекте', isRight: false },
      {
        text: 'Упорядочение элементов риска по степени их влияния',
        isRight: false,
      },
      { text: 'Подготовка к работе с каждым элементом риска', isRight: false },
      {
        text: 'Оценка вероятности и величины потери по каждому элементу риска',
        isRight: false,
      },
    ],
  },
  {
    question:
      '161.От каких величин зависят показатели рисков программных проектов?',
    answers: [
      {
        text: 'От вероятности и потери неудовлетворительного результата',
        isRight: true,
      },
      {
        text: 'От масштаба проекта, размера команды разработчиков, количества выделенных средств',
        isRight: false,
      },
      { text: 'От длительности разработки и масштаба проекта', isRight: false },
      {
        text: 'От масштаба проекта и размера команды разработчиков',
        isRight: false,
      },
      { text: 'От количества выделенных средств', isRight: false },
    ],
  },
  {
    question:
      '162.К какой категории программных продуктов относится Rational Unified Process (RUP)?',
    answers: [
      { text: 'База данных', isRight: false },
      { text: 'Информационная система', isRight: false },
      { text: 'CASE-средство', isRight: false },
      { text: 'CASE-система', isRight: false },
      { text: 'База знаний', isRight: true },
    ],
  },
  {
    question:
      '163.Какие основные аспекты работы над проектом выделяются в RUP?',
    answers: [
      { text: 'Структурный и логический', isRight: false },
      { text: 'Вероятностный и детерминированный', isRight: false },
      { text: 'Статический и динамический', isRight: true },
      { text: 'Динамический и объектный', isRight: false },
      { text: 'Статический и объектный', isRight: false },
    ],
  },
  {
    question: '164.Для чего предназначена диаграмма Deployment?',
    answers: [
      {
        text: 'Для выполнения тестирования программного средства',
        isRight: false,
      },
      { text: 'Для анализа состояний объектов', isRight: false },
      { text: 'Для анализа аппаратной части системы', isRight: true },
      {
        text: 'Для изучения взаимодействия между программными модулями системы',
        isRight: false,
      },
      {
        text: 'Для анализа взаимодействия между объектами модели',
        isRight: false,
      },
    ],
  },
  {
    question: '165.Термин “наследование” обозначает, что …',
    answers: [
      {
        text: 'производные классы наследуют модификаторы доступа членов родительского класса',
        isRight: false,
      },
      {
        text: 'в производных классах присутствует часть состояния родительского класса',
        isRight: false,
      },
      {
        text: 'производные классы содержат методы родительского класса',
        isRight: false,
      },
      {
        text: 'производные классы содержат поля и методы родительского',
        isRight: true,
      },
      {
        text: 'производные классы наследуют поля родительского класса',
        isRight: false,
      },
    ],
  },
  {
    question: '166. Каким элементом завершается диаграмма Activity?',
    answers: [
      { text: 'Actor', isRight: false },
      { text: 'Start State', isRight: false },
      { text: 'State', isRight: false },
      { text: 'End State', isRight: true },
      { text: 'Object', isRight: false },
    ],
  },
  {
    question:
      '167. Укажите UML-диаграммы, по которым можно генерировать код приложения',
    answers: [
      { text: 'Диаграмма Class', isRight: true },
      { text: 'Диаграммы Use Case и Class', isRight: false },
      { text: 'Диаграммы Component, Class, Activity', isRight: false },
      {
        text: 'По каждой UML-диаграмме можно генерировать исходный код приложения',
        isRight: false,
      },
      { text: 'Диаграммы Component и Class', isRight: false },
    ],
  },
  {
    question: '168.Почему Rational XDE имеет большой набор web-стереотипов?',
    answers: [
      { text: 'По просьбам разработчиков и пользователей', isRight: false },
      { text: 'Из-за использования новой версии языка UML', isRight: false },
      { text: 'Из-за ориентации на создание web-приложений', isRight: true },
      {
        text: 'Из-за использования большого количества шаблонов',
        isRight: false,
      },
      { text: 'Из-за интеграции со средой разработки', isRight: false },
    ],
  },
  {
    question:
      '169. Имеются ли в технологии Oracle аналоги статического и динамического аспектов RUP?',
    answers: [
      {
        text: 'Имеется два статических и два динамических аспекта',
        isRight: false,
      },
      { text: 'Да', isRight: true },
      { text: 'Есть аналог только статического аспекта', isRight: false },
      { text: 'Нет', isRight: false },
      { text: 'Есть аналог только динамического аспекта', isRight: false },
    ],
  },
  {
    question:
      '170.Влияют ли на генерацию кода такие стереотипы диаграммы Class, как граничный класс, управление, сущность?',
    answers: [
      { text: 'Влияют только граничный класс и управление', isRight: false },
      { text: 'Никак не влияют', isRight: false },
      { text: 'Влияют только сущность и управление', isRight: false },
      { text: 'Влияют только граничный класс и сущность', isRight: false },
      { text: 'Влияют все три стереотипа', isRight: true },
    ],
  },
  {
    question:
      '171. Для каких целей могут использовать Enterprise Architect тестировщики?',
    answers: [
      {
        text: 'Для соотнесения функциональных требований с вариантами использования, выполнения моделирования объектов в реальном времени',
        isRight: false,
      },
      {
        text: 'Для назначения ресурсов элементам, оценки рисков, объема работ, масштаба проекта',
        isRight: false,
      },
      {
        text: 'Для создания высокоуровневых моделей бизнес-процессов',
        isRight: false,
      },
      { text: 'Для работы с кодом', isRight: false },
      { text: 'Для поддержки тестирования', isRight: true },
    ],
  },
  {
    question:
      '172. Какие из следующих методов можно переопределить в C#? a) GetHashCode(); b) ToString(); c) GetType()',
    answers: [
      { text: 'a, b', isRight: true },
      { text: 'b, c', isRight: false },
      { text: 'только a', isRight: false },
      { text: 'b, c', isRight: false },
      { text: 'a, c', isRight: false },
    ],
  },
  {
    question: '173.Что показывает значок Aggregate на диаграмме Class?',
    answers: [
      { text: 'Зависимость между классами', isRight: false },
      {
        text: 'Использование одним классом объектов другого класса',
        isRight: false,
      },
      { text: 'Один класс содержит другой', isRight: true },
      { text: 'Наследование между классами', isRight: false },
      { text: 'Инкапсуляцию', isRight: false },
    ],
  },
  {
    question:
      '174. Какой интерфейс должен реализовать класс в C#, чтобы он мог использоваться в foreach?',
    answers: [
      { text: 'IEnumeration', isRight: false },
      { text: 'IComparable', isRight: false },
      { text: 'ICollection', isRight: false },
      { text: 'IEnumerable', isRight: true },
      { text: 'IEnumerator', isRight: false },
    ],
  },
  {
    question:
      '175.Какой из перечисленных объектов является приемом, структурирующим объекты?',
    answers: [
      { text: 'Итератор', isRight: false },
      { text: 'Одиночка', isRight: false },
      { text: 'Состояние', isRight: false },
      { text: 'Компоновщик', isRight: true },
      { text: 'Наблюдатель', isRight: false },
    ],
  },
  {
    question:
      '176. На каком этапе жизненного цикла разработки программной системы строится диаграмма Use Case?',
    answers: [
      { text: 'Проектирования', isRight: false },
      { text: 'Тестирования', isRight: false },
      { text: 'Программирования', isRight: false },
      { text: 'Анализа требований и определения функций', isRight: true },
      { text: 'Документирования', isRight: false },
    ],
  },
  {
    question: '177.Какого стереотипа нет для классов?',
    answers: [
      { text: 'Управление', isRight: false },
      { text: 'Структура', isRight: true },
      { text: 'Синхронизация', isRight: false },
      { text: 'Сущность', isRight: false },
      { text: 'Граничный класс', isRight: false },
    ],
  },
  {
    question:
      '178.К группе каких критериев относится показатель трудоемкости разработки CASE-средства?',
    answers: [
      { text: 'Функциональным', isRight: false },
      { text: 'Техническим', isRight: false },
      { text: 'Технологическим', isRight: true },
      { text: 'Энергетическим', isRight: false },
      { text: 'Экономическим', isRight: false },
    ],
  },
  {
    question: '179. Какие информационные ресурсы используют CASE-средства?',
    answers: [
      { text: 'Активные и дорогие', isRight: false },
      { text: 'Пассивные', isRight: false },
      { text: 'Активные', isRight: true },
      { text: 'Активные и пассивные', isRight: false },
      { text: 'Активные и дешевые', isRight: false },
    ],
  },
  {
    question: '180. Масштаб проекта – это…?',
    answers: [
      { text: 'Сумма средств и размера команды разработчиков', isRight: false },
      { text: 'Сумма затрат времени и средств', isRight: false },
      { text: 'Его размер', isRight: false },
      {
        text: 'Совокупность его цели, планируемых затрат времени и средств',
        isRight: true,
      },
      { text: 'Неопределенное понятие', isRight: false },
    ],
  },
  {
    question:
      '181.Мотоцикл -> колесо. Какое отношение описывает данный пример?',
    answers: [
      { text: 'Наследование', isRight: false },
      { text: 'Агрегация', isRight: false },
      { text: 'Реализация', isRight: false },
      { text: 'Нет правильных ответов', isRight: false },
      { text: 'Композиция', isRight: true },
    ],
  },
  {
    question:
      '182.Можно ли конструктор пометить с помощью модификатора virtual?',
    answers: [
      { text: 'Нет, конструктор не может быть виртуальным', isRight: true },
      {
        text: 'Можно только если конструктор и static и protected',
        isRight: false,
      },
      { text: 'Да, можно', isRight: false },
      {
        text: 'Можно, при использовании модификатора доступа protected',
        isRight: false,
      },
      { text: 'Можно только если конструктор является static', isRight: false },
    ],
  },
  {
    question: '183. Что означает анализ проектного риска?',
    answers: [
      {
        text: 'Упорядочение элементов риска по степени их влияния',
        isRight: false,
      },
      {
        text: 'Оценка вероятности и величины потери по каждому элементу риска',
        isRight: true,
      },
      { text: 'Выявление элементов риска в проекте', isRight: false },
      { text: 'Устранение или разрешение элементов риска', isRight: false },
      { text: 'Подготовка к работе с каждым элементом риска', isRight: false },
    ],
  },
  {
    question: '184.Какой диаграмме принадлежит значок Decision?',
    answers: [
      { text: 'Никакой', isRight: false },
      { text: 'Activity', isRight: true },
      { text: 'Class', isRight: false },
      { text: 'Use Case', isRight: false },
      { text: 'Он имеется во всех диаграммах', isRight: false },
    ],
  },
  {
    question: '185. Что является статическими аспектами RUP?',
    answers: [
      { text: 'Временные промежутки (фазы, циклы, итерации)', isRight: false },
      { text: 'Объекты и классы', isRight: false },
      { text: 'Актеры и роли', isRight: false },
      { text: 'Артефакты и прецеденты', isRight: false },
      { text: 'Этапы жизненного цикла программных систем', isRight: true },
    ],
  },
  {
    question:
      '186.Назовите основные типы проектов, положенные в основу создания программных продуктов',
    answers: [
      {
        text: 'Тиражируемый, под заказ, для постоянного заказчика',
        isRight: false,
      },
      {
        text: 'Для одного заказчика, для нескольких заказчиков, тиражируемый, аутсорсинг',
        isRight: false,
      },
      {
        text: 'Для постоянного заказчика, для временного заказчика, тиражируемый, аутсорсинг',
        isRight: true,
      },
      {
        text: 'Для постоянного заказчика, для временного заказчика, под заказ, тиражируемый, аутсорсинг',
        isRight: false,
      },
      {
        text: 'Для постоянного заказчика, для временного заказчика, под заказ, тиражируемый',
        isRight: false,
      },
    ],
  },
  {
    question:
      '187. Что означает аттестация в ходе разработки программного средства?',
    answers: [
      {
        text: 'Формальная проверка того, что созданное программное средство удовлетворяет всем техническим требованиям',
        isRight: true,
      },
      { text: 'Фиксация технических решений', isRight: false },
      { text: 'Планирование, слежение и руководство', isRight: false },
      { text: 'Контроль корректности программного средства', isRight: false },
      { text: 'Создание программного средства', isRight: false },
    ],
  },
  {
    question:
      '188. Назовите составляющие, от которых зависит успех любого проекта',
    answers: [
      { text: 'Методология, метод, нотация', isRight: false },
      { text: 'Нотация, методика, инструмент', isRight: false },
      { text: 'Технология, методология, инструмент', isRight: false },
      { text: 'Процесс, инструмент, система обозначений', isRight: true },
      {
        text: 'Проектирование, программирование, тестирование',
        isRight: false,
      },
    ],
  },
  {
    question: '189.Что характерно для аутсорсинга?',
    answers: [
      {
        text: 'Распределенная структура проекта и начальные предпосылки к тяжелой методологии',
        isRight: true,
      },
      {
        text: 'Применение легкой методологии и отсутствие необходимости в сертификации',
        isRight: false,
      },
      {
        text: 'Низкий уровень автоматизации и высокая стоимость',
        isRight: false,
      },
      { text: 'Модульность и применение тяжелой методологии', isRight: false },
      {
        text: 'Принцип модульности и высокий уровень автоматизации',
        isRight: false,
      },
    ],
  },
  {
    question:
      '190. Какие этапы жизненного цикла программных средств охватывают продукты корпорации Rational Software?',
    answers: [
      { text: 'Проектирование и программирование', isRight: false },
      { text: 'Все этапы жизненного цикла', isRight: true },
      {
        text: 'Анализ требований, проектирование и программирование',
        isRight: false,
      },
      {
        text: 'Проектирование, программирование, тестирование',
        isRight: false,
      },
      {
        text: 'Проектирование, программирование, документирование',
        isRight: false,
      },
    ],
  },
  {
    question:
      '191. Что может обозначаться значком Actor на диаграмме Use Case?',
    answers: [
      { text: 'Функции пользователей', isRight: false },
      { text: 'Клиенты и серверы', isRight: false },
      {
        text: 'Этот значок не используется на диаграмме Use Case',
        isRight: false,
      },
      { text: 'Все', isRight: false },
      {
        text: 'Пользователи системы, другие системы и подсистемы',
        isRight: true,
      },
    ],
  },
  {
    question:
      '192.Что не относится к элементам объектно-ориентированного подхода?',
    answers: [
      { text: 'Инкапсуляция', isRight: false },
      { text: 'Иерархичность', isRight: false },
      { text: 'Модульность', isRight: false },
      { text: 'Автоматизация', isRight: true },
      { text: 'Абстракция', isRight: false },
    ],
  },
  {
    question:
      '193.На основе какой диаграммы в CASE-среде строится Web-приложение?',
    answers: [
      { text: 'Collaboration', isRight: false },
      { text: 'Component', isRight: false },
      { text: 'Activity', isRight: false },
      { text: 'Class', isRight: true },
      { text: 'Use Case', isRight: false },
    ],
  },
  {
    question:
      '194. Выберите верное: a) из конструктора можно выбрасывать исключения(С#); b) из конструктора можно выбрасывать исключения(Java); c) Из конструктора можно выбрасывать исключения(C++); d) из деструктора можно выбрасывать исключения(С#); e) из деструктора можно выбрасывать исключения(Java); f) из деструктора можно выбрасывать исключения(С++)',
    answers: [
      { text: 'верны b, c, e, f', isRight: false },
      { text: 'верны: a, c, d, f', isRight: false },
      { text: 'все неверны', isRight: false },
      { text: 'все верны', isRight: true },
      { text: 'верны: a, b, c', isRight: false },
    ],
  },
  {
    question: '195.Что представляют собой элементы диаграммы Component?',
    answers: [
      { text: 'Классы', isRight: false },
      { text: 'Объекты, классы, программные модули', isRight: false },
      { text: 'Объекты', isRight: false },
      { text: 'Аппаратные и программные части системы', isRight: false },
      { text: 'Программные модули', isRight: true },
    ],
  },
  {
    question:
      '196. Что отсутствует в коде в результате автоматической кодогенерации?',
    answers: [
      { text: 'Наследование классов', isRight: false },
      { text: 'Содержание методов', isRight: true },
      { text: 'Имена классов', isRight: false },
      { text: 'Структуры', isRight: false },
      { text: 'Атрибуты', isRight: false },
    ],
  },
  {
    question: '197. Конструктор, не имеющий ни одного параметра называется:',
    answers: [
      { text: 'конструктор по умолчанию', isRight: true },
      { text: 'конъюнктур', isRight: false },
      { text: 'обычный конструктор', isRight: false },
      { text: 'статический конструктор', isRight: false },
      { text: 'динамический конструктор', isRight: false },
    ],
  },
  {
    question:
      '198.Что из нижеперечисленного не относится к конструктору:a) наследуется; b) может быть объявлен static; c) может быть записан в abstract классе; d) может возвращать значения; e) если явно не описать конструктор в классе, класс станет static',
    answers: [
      { text: 'a, b, c', isRight: false },
      { text: 'b, c, d, e', isRight: false },
      { text: 'c, e', isRight: false },
      { text: 'a, c, d, e', isRight: true },
      { text: 'b, c, d', isRight: false },
    ],
  },
  {
    question:
      '199. Выберите неверное утверждение для поля с ключевым словом readonly:',
    answers: [
      { text: 'можно изменить в конструкторе', isRight: false },
      { text: 'можно инициализировать при объявлении', isRight: false },
      { text: 'можно изменить в методе класса', isRight: true },
      { text: 'можно инициализировать в конструкторе', isRight: false },
      { text: 'нельзя изменять', isRight: false },
    ],
  },
  {
    question: '200. Для чего предназначена диаграмма Component?',
    answers: [
      {
        text: 'Для анализа взаимодействия между объектами модели',
        isRight: false,
      },
      {
        text: 'Для анализа взаимодействия между объектами и классами системы',
        isRight: false,
      },
      {
        text: 'Для отражения взаимодействия между программными модулями системы',
        isRight: true,
      },
      { text: 'Для анализа аппаратной части системы', isRight: false },
      {
        text: 'Для анализа взаимодействия между классами системы',
        isRight: false,
      },
    ],
  },
  {
    question:
      '201.К каким критериям уровня развития CASE-средств относится показатель интенсивности обработки информации?',
    answers: [
      { text: 'Функциональным', isRight: true },
      { text: 'Техническим', isRight: false },
      { text: 'Экономическим', isRight: false },
      { text: 'Технологическим', isRight: false },
      { text: 'Энергетическим', isRight: false },
    ],
  },
  {
    question: '202.Что является уникальным элементом диаграммы Sequence?',
    answers: [
      { text: 'Отражение взаимодействия объектов во времени', isRight: true },
      { text: 'Отражение действий объектов', isRight: false },
      { text: 'Наличие элемента «синхронизация»', isRight: false },
      {
        text: 'Отражение взаимодействия объектов в пространстве',
        isRight: false,
      },
      { text: 'Наличие элемента «плавательные дорожки»', isRight: false },
    ],
  },
  {
    question: '203. Какие действия входят в управление проектом?',
    answers: [
      { text: 'Сопровождение', isRight: false },
      { text: 'Проектирование и программирование', isRight: false },
      { text: 'Проектирование и автоматизация', isRight: false },
      { text: 'Планирование, организация и контроль', isRight: true },
      { text: 'Тестирование и документирование', isRight: false },
    ],
  },
  {
    question: '204. Что показывает на диаграмме Use Case связь include?',
    answers: [
      {
        text: 'Отражает прецедент, являющийся частью главного прецедента',
        isRight: true,
      },
      { text: 'Отражает расширение прецедента', isRight: false },
      { text: 'Обозначает простые связи между элементами', isRight: false },
      {
        text: 'Зависимость одного элемента диаграммы от другого на уровне доступа',
        isRight: false,
      },
      {
        text: 'Зависимость одного элемента диаграммы от другого, когда один элемент импортирует информацию из другого',
        isRight: false,
      },
    ],
  },
  {
    question: '205. Какую из моделей не строят на основе диаграммы Class?',
    answers: [
      { text: 'Модель анализа', isRight: false },
      { text: 'Модель предметной области', isRight: false },
      { text: 'Модель для генерации кода', isRight: false },
      { text: 'Физическую модель', isRight: true },
      { text: 'Web-модель', isRight: false },
    ],
  },
  {
    question:
      '206. С помощью каких групп критериев оценивается уровень совершенства CASE-средства?',
    answers: [
      {
        text: 'Функциональных, технологических, экономических, эргономических',
        isRight: true,
      },
      {
        text: 'Статистических, функциональных, энергетических, экономических, технических',
        isRight: false,
      },
      {
        text: 'Технологических, технических, экономических, эргономических',
        isRight: false,
      },
      {
        text: 'Функциональных, технических, экономических, эргономических',
        isRight: false,
      },
      {
        text: 'Функциональных, технических, технологических, экономических, эргономических',
        isRight: false,
      },
    ],
  },
  {
    question: '207. Чем является системная модель для CASE-средства?',
    answers: [
      { text: 'Физической моделью', isRight: false },
      { text: 'Логической моделью', isRight: false },
      { text: 'Базой данных', isRight: false },
      { text: 'Паспортом (номенклатурой)', isRight: true },
      { text: 'Абстракцией', isRight: false },
    ],
  },
  {
    question:
      '208. Сколько уровней интеграции существует в технологии Borland?',
    answers: [
      { text: 'Четыре', isRight: false },
      { text: 'Три', isRight: true },
      { text: 'Пять', isRight: false },
      { text: 'В данной технологии нет уровней интеграции', isRight: false },
      { text: 'Два', isRight: false },
    ],
  },
  {
    question:
      '209.Какую диаграмму можно получить автоматически из диаграммы Sequence?',
    answers: [
      { text: 'Никакую', isRight: false },
      { text: 'Collaboration', isRight: true },
      { text: 'Class', isRight: false },
      { text: 'Statechart', isRight: false },
      { text: 'Activity', isRight: false },
    ],
  },
  {
    question: '210. Выберите верное утверждение:',
    answers: [
      {
        text: 'Ни в С++, ни в С# нет понятия единого базового класса',
        isRight: false,
      },
      { text: 'В C# все классы имеют единый базовый класс', isRight: true },
      {
        text: 'Все классы в С++ и C# по умолчанию имеют базовый класс',
        isRight: false,
      },
      { text: 'В С++ все классы имеют единый базовый класс', isRight: false },
      {
        text: 'В C# не существует понятия единого базового класса',
        isRight: false,
      },
    ],
  },
  {
    question:
      '211. Как классифицируются CASE-средства в зависимости от их функциональной полноты?',
    answers: [
      { text: 'Легкие и тяжелые', isRight: false },
      {
        text: 'Охватывающие один этап, несколько этапов или весь жизненный цикл программного средства',
        isRight: true,
      },
      { text: 'Структурные и объектно-ориентированные', isRight: false },
      {
        text: 'Структурные, объектно-ориентированные, комбинированные',
        isRight: false,
      },
      { text: 'Легкие, средние и тяжелые', isRight: false },
    ],
  },
  {
    question:
      '212. Модификатор доступа public, примененный к модулю, означает:',
    answers: [
      {
        text: 'доступ к модулю получают только модули расширения',
        isRight: false,
      },
      { text: 'доступ к модулю получают все', isRight: true },
      {
        text: 'доступ к модулю получают данный модуль и модули расширения',
        isRight: false,
      },
      {
        text: 'доступ к модулю получают данный модуль и программы, в которых данный модуль подключаются на уровне исходного кода',
        isRight: false,
      },
      {
        text: 'доступ к модулю получают лишь процедуры этого модуля',
        isRight: false,
      },
    ],
  },
  {
    question: '213.Чем отличается процедура от метода?',
    answers: [
      {
        text: 'В процедуру класса, всегда неявно передаётся сам класс',
        isRight: false,
      },
      { text: 'процедура и метод идентичны', isRight: false },
      { text: 'Процедура возвращает значение, метод - нет', isRight: false },
      { text: 'Метод возвращает значение, процедура - нет', isRight: false },
      {
        text: 'В метод класса, всегда неявно передаётся ссылка на объект',
        isRight: true,
      },
    ],
  },
  {
    question:
      '214. Что произойдет при двух последовательных вызовах метода Object.GetHashCode()?',
    answers: [
      { text: 'Вернутся разные значения', isRight: false },
      { text: 'Нет правильных ответов', isRight: false },
      { text: 'Будет создана исключительная ситуация', isRight: false },
      { text: 'Произойдёт ошибка', isRight: false },
      { text: 'Вернутся равные значения', isRight: true },
    ],
  },
  {
    question:
      '215. Для чего на диаграмме Class используется стереотип управление?',
    answers: [
      {
        text: 'Для отображения принципа модульности в системе',
        isRight: false,
      },
      {
        text: 'Он показывает, что класс предназначен для взаимодействия с внешними актерами и стоит на границе системы',
        isRight: false,
      },
      {
        text: 'Для управления работой других классов приложения',
        isRight: true,
      },
      { text: 'Для отображения иерархии в системе', isRight: false },
      {
        text: 'Для моделирования классов, которые отвечают за хранение определенной информации',
        isRight: false,
      },
    ],
  },
  {
    question:
      '216. Какое действие не входит в жизненный цикл программного средства?',
    answers: [
      { text: 'Сопровождение', isRight: false },
      { text: 'Верификация', isRight: false },
      { text: 'Проектирование', isRight: false },
      { text: 'Маркетинг', isRight: true },
      { text: 'Тестирование', isRight: false },
    ],
  },
  {
    question:
      '217.Что отражает критерий технологических возможностей CASE-средства?',
    answers: [
      { text: 'Уровень рентабельности CASE-средства', isRight: false },
      { text: 'Степень автоматизации процесса разработки', isRight: false },
      { text: 'Непрерывность процесса проектирования', isRight: false },
      {
        text: 'Простоту разработки CASE-средства и подготовки его к эксплуатации',
        isRight: true,
      },
      { text: 'Надежность CASE-средства', isRight: false },
    ],
  },
  {
    question: '218. Какой диаграмме принадлежит значок Swimlanes?',
    answers: [
      { text: 'Use Case', isRight: false },
      { text: 'Он имеется во всех диаграммах', isRight: false },
      { text: 'Никакой', isRight: false },
      { text: 'Activity', isRight: true },
      { text: 'Class', isRight: false },
    ],
  },
  {
    question:
      '219. Какие подходы к разработке программных средств выделяют в технологии Oracle?',
    answers: [
      { text: 'Объектно-ориентированный и структурный', isRight: false },
      { text: 'Динамический и статический', isRight: false },
      {
        text: 'Быстрый динамический и классический статический',
        isRight: false,
      },
      { text: 'Классический и объектно-ориентированный', isRight: false },
      { text: 'Классический и быстрый', isRight: true },
    ],
  },
  {
    question: '220. ОС',
    answers: [
      { text: 'Процедура возвращает значение, метод – нет', isRight: false },
      {
        text: 'В процедуру класса, всегда неявно передаётся ссылка на объект данного класса Метод возвращает значение, процедура – нет',
        isRight: false,
      },
      {
        text: 'В метод класса, всегда неявно передаётся ссылка на объект данного класса',
        isRight: true,
      },
      { text: 'Процедура возвращает значение, метод – нет', isRight: false },
      { text: 'Процедура и метод идентичны', isRight: false },
    ],
  },
  {
    question:
      '221. Для чего в Enterprise Architect предназначен шаблон модели требований?',
    answers: [
      {
        text: 'Для построения каталога требований конечных пользователей и отношений между ними',
        isRight: true,
      },
      {
        text: 'Для определения построения компонентов программы на физическом уровне',
        isRight: false,
      },
      {
        text: 'Для составления набора тестов и планов тестирования, которые выполняются в соответствии с текущей моделью',
        isRight: false,
      },
      {
        text: 'Для описания системы в терминах вариантов использования',
        isRight: false,
      },
      {
        text: 'Для построения логической модели программной системы',
        isRight: false,
      },
    ],
  },
  {
    question:
      '222. Какие скрытые поля есть у объекта в C#? a) Syncblk; b) Flags; c) MethodTable',
    answers: [
      { text: 'только c', isRight: true },
      { text: 'a и c', isRight: false },
      { text: 'a, b, c', isRight: false },
      { text: 'a и b', isRight: false },
      { text: 'b и c', isRight: false },
    ],
  },
  {
    question: '223.Перечислите основные элементы диаграммы Use Case',
    answers: [
      { text: 'Актеры, объекты и классы', isRight: false },
      { text: 'Актеры и роли', isRight: true },
      { text: 'Актеры, объекты и роли', isRight: false },
      { text: 'Объекты и классы', isRight: false },
      { text: 'Роли, объекты и классы', isRight: false },
    ],
  },
  {
    question:
      '224. Как называется механизм объектно-ориентированного программирования, который предоставляет возможность объектам с одинаковой спецификацией иметь различную реализацию?',
    answers: [
      { text: 'Абстракция', isRight: false },
      { text: 'Полиморфизм', isRight: true },
      { text: 'Наследование', isRight: false },
      { text: 'Агрегация', isRight: false },
      { text: 'Инкапсуляция', isRight: false },
    ],
  },
  {
    question: '225.Что выполняется на этапе верификации программного средства?',
    answers: [
      { text: 'Контроль корректности программного средства', isRight: false },
      { text: 'Разработка документации', isRight: false },
      {
        text: 'Формальная проверка соответствия программного средства всем техническим требованиям',
        isRight: true,
      },
      { text: 'Разработка программного кода', isRight: false },
      { text: 'Управление программным средством', isRight: false },
    ],
  },
  {
    question: '226.Что представляет собой современная CASE-технология?',
    answers: [
      {
        text: 'Методологию автоматизированного проектирования и разработки программных средств',
        isRight: false,
      },
      {
        text: 'Методологию автоматизированного тестирования, разработки и сопровождения программных средств',
        isRight: false,
      },
      {
        text: 'Методологию автоматизированного проектирования и тестирования программных средств',
        isRight: false,
      },
      {
        text: 'Методологию автоматизированного тестирования программных средств',
        isRight: false,
      },
      {
        text: 'Методологию автоматизации всего жизненного цикла программных средств',
        isRight: true,
      },
    ],
  },
  {
    question:
      '227. Какой модификатор доступа может иметь класс в C#? a) public; b) private; c) protected; d) internal; e) protected internal',
    answers: [
      { text: 'b и c', isRight: false },
      { text: 'a, b и d', isRight: false },
      { text: 'a и c', isRight: false },
      { text: 'd и e', isRight: false },
      { text: 'a и d', isRight: true },
    ],
  },
  {
    question:
      '228. Операторная функция в языке С++ создается с помощью ключевого слова:',
    answers: [
      { text: 'operation', isRight: false },
      { text: 'iterator', isRight: false },
      { text: 'operator', isRight: true },
      { text: 'constructor', isRight: false },
      { text: 'allocator', isRight: false },
    ],
  },
  {
    question:
      '229. Перечислите режимы, в которых можно выполнять синхронизацию кода и модели в современных CASE-средствах',
    answers: [
      { text: 'Ручной и автоматический', isRight: true },
      { text: 'Ручной и автоматизированный', isRight: false },
      { text: 'Ручной', isRight: false },
      { text: 'Автоматический и автоматизированный', isRight: false },
      { text: 'Автоматический', isRight: false },
    ],
  },
  {
    question: '230. Какой диаграмме принадлежит инструмент Synchronizations?',
    answers: [
      { text: 'Use Case', isRight: false },
      { text: 'Никакой', isRight: false },
      { text: 'Он имеется во всех диаграммах', isRight: false },
      { text: 'Class', isRight: false },
      { text: 'Activity', isRight: true },
    ],
  },
  {
    question: '231. Какой диаграмме принадлежит понятие «линия жизни объекта»?',
    answers: [
      { text: 'Никакой', isRight: false },
      { text: 'Collaboration', isRight: false },
      { text: 'Statechart', isRight: false },
      { text: 'Sequence', isRight: true },
      { text: 'Activity', isRight: false },
    ],
  },
  {
    question:
      '232. В основу работы каких диаграмм положена клиент-серверная технология?',
    answers: [
      { text: 'Use Case, Class', isRight: false },
      { text: 'Free Form', isRight: false },
      { text: 'Collaboration, Sequence', isRight: true },
      { text: 'Class, Component', isRight: false },
      { text: 'Statechart, Activity', isRight: false },
    ],
  },
  {
    question: '233.Какая диаграмма в явном виде отсутствует в Rational XDE?',
    answers: [
      { text: 'Activity', isRight: false },
      { text: 'Class', isRight: false },
      { text: 'Collaboration', isRight: true },
      { text: 'Use Case', isRight: false },
      { text: 'Component', isRight: false },
    ],
  },
  {
    question: '234. Что означает планирование проектного риска?',
    answers: [
      { text: 'Устранение или разрешение элементов риска', isRight: false },
      {
        text: 'Оценку вероятности и величины потери по каждому элементу риска',
        isRight: false,
      },
      { text: 'Подготовку к работе с каждым элементом риска', isRight: true },
      { text: 'Выявление элементов риска в проекте', isRight: false },
      {
        text: 'Упорядочение элементов риска по степени их влияния',
        isRight: false,
      },
    ],
  },
  {
    question: '235.Что означают термины «артефакт» и «прецедент»?',
    answers: [
      { text: 'Альтернативные названия объектов и классов', isRight: false },
      { text: 'Основные элементы диаграммы Class', isRight: false },
      {
        text: 'Любые продукты проекта и действия, выполняемые в системе для получения результата',
        isRight: true,
      },
      { text: 'Различные виды пользователей в системе', isRight: false },
      { text: 'Элементы диаграммы Component', isRight: false },
    ],
  },
  {
    question:
      '236. Модификатор доступа public, примененный к модулю, означает:',
    answers: [
      {
        text: 'доступ к модулю получают только модули расширения',
        isRight: false,
      },
      { text: 'доступ к модулю получают все', isRight: true },
      {
        text: 'доступ к модулю получают данный модуль и модули расширения',
        isRight: false,
      },
      {
        text: 'доступ к модулю получают данный модуль и программы, в которых данный модуль подключаются на уровне исходного кода',
        isRight: false,
      },
      {
        text: 'доступ к модулю получают лишь процедуры этого модуля',
        isRight: false,
      },
    ],
  },
  {
    question: '237.Создать свой класс-атрибут в языке С# можно с помощью:',
    answers: [
      { text: 'создания метода Attribute в классе', isRight: false },
      {
        text: 'использовать ключевое слово Attribute при описании класса',
        isRight: false,
      },
      { text: 'передачи аргумента Attribute в конструктор', isRight: false },
      { text: 'наследования от класса Attribute', isRight: true },
      { text: 'создания поля Attribute в классе', isRight: false },
    ],
  },
  {
    question: '238.Что показывает значок Realization на диаграмме Class?',
    answers: [
      {
        text: 'Отношение между классом и интерфейсом, который этим классом реализуется',
        isRight: true,
      },
      { text: 'Агрегацию', isRight: false },
      { text: 'Наследование между классами', isRight: false },
      { text: 'Инкапсуляцию', isRight: false },
      { text: 'Зависимость между классами', isRight: false },
    ],
  },
  {
    question:
      '239.Что из перечисленного не может входить в статический (static) класс?',
    answers: [
      { text: 'Свойство', isRight: false },
      { text: 'Поле', isRight: false },
      { text: 'Конструктор', isRight: true },
      { text: 'Все из вышеперечисленного может входить', isRight: false },
      { text: 'Метод', isRight: false },
    ],
  },
  {
    question: '240.Какие модели можно строить на основе диаграммы Class?',
    answers: [
      { text: 'Логическую и физическую модели', isRight: false },
      { text: 'Объектную модель', isRight: false },
      { text: 'Модель данных и Web-модель', isRight: false },
      {
        text: 'Модель предметной области, модель анализа, модель для генерации кода',
        isRight: true,
      },
      { text: 'Модель для генерации кода и логическую модель', isRight: false },
    ],
  },
  {
    question:
      '241.Сколько родительских классов может иметь производный класс в C#?',
    answers: [
      { text: 'Не больше двух', isRight: false },
      { text: 'Всегда один', isRight: true },
      { text: 'Любое количество', isRight: false },
      { text: 'Не больше одного', isRight: false },
      { text: 'Нет правильных ответов', isRight: false },
    ],
  },
  {
    question:
      '242.Что из нижеперечисленного не относится к конструктору: a) наследуется; b) может быть объявлен static; c) может быть записан в abstract классе; d) может возвращать значения; e) если явно не описать конструктор в классе, класс станет static',
    answers: [
      { text: 'c,e', isRight: false },
      { text: 'a,c,d,e', isRight: true },
      { text: 'a,b,c', isRight: false },
      { text: 'b,c,d,e', isRight: false },
      { text: 'a,b,c,d', isRight: false },
    ],
  },
];
